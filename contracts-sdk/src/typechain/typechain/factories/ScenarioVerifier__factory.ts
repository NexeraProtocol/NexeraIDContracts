/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ScenarioVerifier,
  ScenarioVerifierInterface,
} from "../ScenarioVerifier";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "AddressIdConnection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "RequestRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "requestId",
            type: "uint64",
          },
          {
            internalType: "uint256[]",
            name: "inputs",
            type: "uint256[]",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        indexed: false,
        internalType: "struct IScenarioVerifier.ZKP[]",
        name: "zkps",
        type: "tuple[]",
      },
    ],
    name: "SubmitedAllZKPsForUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "UserAllowedForRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "UserAllowedForScenario",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "contract ICircuitValidator",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "ZKPRequestSet",
    type: "event",
  },
  {
    inputs: [],
    name: "REQUESTS_RETURN_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "requestId",
            type: "uint64",
          },
          {
            internalType: "uint256[]",
            name: "inputs",
            type: "uint256[]",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct IScenarioVerifier.ZKP[]",
        name: "zkps",
        type: "tuple[]",
      },
    ],
    name: "allowUserForScenario",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "finalizeAllowListScenario",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "getZKPRequest",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getZKPRequests",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZKPRequestsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowedForScenario",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isRuleIdRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "queryRequestWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredRuleIDs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "requestIdExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "scenarioAllowList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setNexeraZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "submitZKPResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200004860201b60201c565b6200005060201b60201c565b620000426200011560201b60201c565b620002bf565b600033905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff161562000168576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015f9062000262565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620001d95760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001d09190620002a2565b60405180910390a15b565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b60006200024a602783620001db565b91506200025782620001ec565b604082019050919050565b600060208201905081810360008301526200027d816200023b565b9050919050565b600060ff82169050919050565b6200029c8162000284565b82525050565b6000602082019050620002b9600083018462000291565b92915050565b613db980620002cf6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638da5cb5b116100b8578063b68967e21161007c578063b68967e2146103d7578063c4d66de8146103f3578063c76d08451461040f578063cb0e0d7d1461043f578063f2fde38b1461046f578063f82ddf0a1461048b57610142565b80638da5cb5b1461030d5780639f5223e01461032b578063a9b9e3e114610347578063ab7bcfb714610377578063b45c0fdf146103a757610142565b80635f9e60d71161010a5780635f9e60d71461022557806360fc1cb5146102555780636508e1b4146102855780636d76b363146102a3578063715018a6146102d357806371941da5146102dd57610142565b806315be5190146101475780631905e7b114610177578063197bf195146101955780632a2d0c47146101c5578063398cfb76146101f5575b600080fd5b610161600480360381019061015c9190611fe3565b6104a7565b60405161016e919061204b565b60405180910390f35b61017f610602565b60405161018c919061207f565b60405180910390f35b6101af60048036038101906101aa91906120da565b610608565b6040516101bc919061204b565b60405180910390f35b6101df60048036038101906101da9190612133565b610629565b6040516101ec91906121a1565b60405180910390f35b61020f600480360381019061020a91906121e8565b61065d565b60405161021c919061204b565b60405180910390f35b61023f600480360381019061023a9190612215565b6106b4565b60405161024c91906124b2565b60405180910390f35b61026f600480360381019061026a91906121e8565b610976565b60405161027c919061204b565b60405180910390f35b61028d610997565b60405161029a919061207f565b60405180910390f35b6102bd60048036038101906102b891906124d4565b6109a5565b6040516102ca919061204b565b60405180910390f35b6102db6109d5565b005b6102f760048036038101906102f29190612133565b6109e9565b6040516103049190612523565b60405180910390f35b610315610a28565b60405161032291906121a1565b60405180910390f35b61034560048036038101906103409190612562565b610a51565b005b610361600480360381019061035c91906121e8565b610aec565b60405161036e919061204b565b60405180910390f35b610391600480360381019061038c91906120da565b610c69565b60405161039e919061204b565b60405180910390f35b6103c160048036038101906103bc91906125be565b610d00565b6040516103ce919061204b565b60405180910390f35b6103f160048036038101906103ec9190612698565b610d30565b005b61040d600480360381019061040891906121e8565b610fae565b005b610429600480360381019061042491906120da565b6110ee565b604051610436919061278b565b60405180910390f35b610459600480360381019061045491906121e8565b6112f2565b604051610466919061207f565b60405180910390f35b610489600480360381019061048491906121e8565b61130b565b005b6104a560048036038101906104a09190612562565b61138e565b005b60008083839050905060005b818110156105b4576105a78585838181106104d1576104d06127ad565b5b90506020028101906104e391906127eb565b60000160208101906104f591906120da565b868684818110610508576105076127ad565b5b905060200281019061051a91906127eb565b80602001906105299190612814565b88888681811061053c5761053b6127ad565b5b905060200281019061054e91906127eb565b604001898987818110610564576105636127ad565b5b905060200281019061057691906127eb565b6080018a8a8881811061058c5761058b6127ad565b5b905060200281019061059e91906127eb565b61010001610d30565b80806001019150506104b3565b507fefbe0f7f95f99f3446b18c397ba10fec2af0a6ef272d84266ccb64303fd469ef3385856040516105e893929190612bd0565b60405180910390a16105f933610aec565b91505092915050565b6103e881565b6102286020528060005260406000206000915054906101000a900460ff1681565b61022b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061022a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60606000806106cd6101f78054905086866103e861141c565b91509150600082826106df9190612c31565b67ffffffffffffffff8111156106f8576106f7612c65565b5b60405190808252806020026020018201604052801561073157816020015b61071e611f3d565b8152602001906001900390816107165790505b50905060008390505b82811015610969576101f660006101f7838154811061075c5761075b6127ad565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546107c390612cc3565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef90612cc3565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546108ab90612cc3565b80601f01602080910402602001604051908101604052809291908181526020018280546108d790612cc3565b80156109245780601f106108f957610100808354040283529160200191610924565b820191906000526020600020905b81548152906001019060200180831161090757829003601f168201915b50505050508152505082858361093a9190612c31565b8151811061094b5761094a6127ad565b5b6020026020010181905250808061096190612cf4565b91505061073a565b5080935050505092915050565b61022a6020528060005260406000206000915054906101000a900460ff1681565b60006101f780549050905090565b6102296020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6109dd611513565b6109e76000611591565b565b61022781815481106109fa57600080fd5b9060005260206000209060049182820401919006600802915054906101000a900467ffffffffffffffff1681565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a59611513565b806101f660008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208181610a8e919061330f565b9050506101f78290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b60008060019050600061022780549050905060005b81811015610bcf5761022960006102278381548110610b2357610b226127ad565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1692508215610bcf578080600101915050610b01565b508161022a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f14e9c7a267790ab46f2189d66cb068dbf65a27e7f844cb8aded907134d36467484604051610c5791906121a1565b60405180910390a18192505050919050565b600080600090505b6101f780549050811015610cf5578267ffffffffffffffff166101f78281548110610c9f57610c9e6127ad565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1603610ce2576001915050610cfb565b8080610ced90612cf4565b915050610c71565b50600090505b919050565b6101f56020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff166101f660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610dea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de1906133a0565b60405180910390fd5b610e8186868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506101f660008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611656565b610e908686868686863361176f565b5060016101f560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610fa686868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506101f660008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611a5b565b505050505050565b60008060019054906101000a900460ff16159050808015610fdf5750600160008054906101000a900460ff1660ff16105b8061100c5750610fee30611c2c565b15801561100b5750600160008054906101000a900460ff1660ff16145b5b61104b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104290613432565b60405180910390fd5b60016000806101000a81548160ff021916908360ff1602179055508015611088576001600060016101000a81548160ff0219169083151502179055505b61109182611591565b80156110ea5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516110e1919061349a565b60405180910390a15b5050565b6110f6611f3d565b6110ff82610c69565b61113e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113590613501565b60405180910390fd5b6101f660008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461118190612cc3565b80601f01602080910402602001604051908101604052809291908181526020018280546111ad90612cc3565b80156111fa5780601f106111cf576101008083540402835291602001916111fa565b820191906000526020600020905b8154815290600101906020018083116111dd57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461126990612cc3565b80601f016020809104026020016040519081016040528092919081815260200182805461129590612cc3565b80156112e25780601f106112b7576101008083540402835291602001916112e2565b820191906000526020600020905b8154815290600101906020018083116112c557829003601f168201915b5050505050815250509050919050565b61022c6020528060005260406000206000915090505481565b611313611513565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137990613593565b60405180910390fd5b61138b81611591565b50565b611396611513565b6113a08282610a51565b7febf5fc5d525575febff148871346e1458de02c705c900ba0bc9b5361d5eba08a828280604001906113d291906130ff565b8460200160208101906113e591906135c8565b8580600001906113f59190612d3c565b6040516114079695949392919061367e565b60405180910390a161141882611c4f565b5050565b60008060008411611462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145990613721565b60405180910390fd5b828411156114a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149c9061378d565b60405180910390fd5b8585106114e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114de906137f9565b60405180910390fd5b600084866114f59190613819565b905086811115611503578690505b8581925092505094509492505050565b61151b611d5c565b73ffffffffffffffffffffffffffffffffffffffff16611539610a28565b73ffffffffffffffffffffffffffffffffffffffff161461158f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158690613899565b60405180910390fd5b565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006116f2838373ffffffffffffffffffffffffffffffffffffffff1663b16a394f6040518163ffffffff1660e01b815260040161169390613905565b602060405180830381865afa1580156116b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d4919061393a565b815181106116e5576116e46127ad565b5b6020026020010151611d64565b90508073ffffffffffffffffffffffffffffffffffffffff16611713611d5c565b73ffffffffffffffffffffffffffffffffffffffff1614611769576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611760906139d9565b60405180910390fd5b50505050565b6000806101f660008a67ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546117b590612cc3565b80601f01602080910402602001604051908101604052809291908181526020018280546117e190612cc3565b801561182e5780601f106118035761010080835404028352916020019161182e565b820191906000526020600020905b81548152906001019060200180831161181157829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461189d90612cc3565b80601f01602080910402602001604051908101604052809291908181526020018280546118c990612cc3565b80156119165780601f106118eb57610100808354040283529160200191611916565b820191906000526020600020905b8154815290600101906020018083116118f957829003601f168201915b50505050508152505090506000635307e79f60e01b90506000818a8a8a8a8a886040015160405160200161194f96959493929190613b19565b6040516020818303038152906040528660405160200161197193929190613c4f565b6040516020818303038152906040529050600080846020015173ffffffffffffffffffffffffffffffffffffffff16836040516119ae9190613c88565b6000604051808303816000865af19150503d80600081146119eb576040519150601f19603f3d011682016040523d82523d6000602084013e6119f0565b606091505b509150915081611a4857600081511115611a0d5780518082602001fd5b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3f90613d11565b60405180910390fd5b8195505050505050979650505050505050565b600082600181518110611a7157611a706127ad565b5b602002602001015190508061022c6000611a89611d5c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611acf611d5c565b61022b600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f646b8bd6cf28645be11999db4a2cdbe4fdd61ea8f95a3877ffc1258f903be3c2611b4a611d5c565b82604051611b59929190613d31565b60405180910390a1600161022960008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206000611b95611d5c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f681ea469fc50f02bc3788c40f25e78e5eaa619484685a28003af83fb0dc8dd67611c0f611d5c565b85604051611c1e929190613d5a565b60405180910390a150505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b61022860008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611d59576102278190806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600161022860008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f56b7ddf97528e633ab570995fc0cf2e93f6eb557b29e5d715965018a34f4295e81604051611d509190612523565b60405180910390a15b50565b600033905090565b6000611d7f611d7a611d7584611d86565b611ed2565b611f2f565b9050919050565b600081905060087eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8216901b60087fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff008316901c17905060107dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8216901b60107fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff00008316901c17905060207bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8216901b60207fffffffff00000000ffffffff00000000ffffffff00000000ffffffff000000008316901c179050604077ffffffffffffffff0000000000000000ffffffffffffffff8216901b60407fffffffffffffffff0000000000000000ffffffffffffffff00000000000000008316901c179050608081901b608082901c179050919050565b6060602067ffffffffffffffff811115611eef57611eee612c65565b5b6040519080825280601f01601f191660200182016040528015611f215781602001600182028036833780820191505090505b509050816020820152919050565b600060148201519050919050565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112611fa357611fa2611f7e565b5b8235905067ffffffffffffffff811115611fc057611fbf611f83565b5b602083019150836020820283011115611fdc57611fdb611f88565b5b9250929050565b60008060208385031215611ffa57611ff9611f74565b5b600083013567ffffffffffffffff81111561201857612017611f79565b5b61202485828601611f8d565b92509250509250929050565b60008115159050919050565b61204581612030565b82525050565b6000602082019050612060600083018461203c565b92915050565b6000819050919050565b61207981612066565b82525050565b60006020820190506120946000830184612070565b92915050565b600067ffffffffffffffff82169050919050565b6120b78161209a565b81146120c257600080fd5b50565b6000813590506120d4816120ae565b92915050565b6000602082840312156120f0576120ef611f74565b5b60006120fe848285016120c5565b91505092915050565b61211081612066565b811461211b57600080fd5b50565b60008135905061212d81612107565b92915050565b60006020828403121561214957612148611f74565b5b60006121578482850161211e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061218b82612160565b9050919050565b61219b81612180565b82525050565b60006020820190506121b66000830184612192565b92915050565b6121c581612180565b81146121d057600080fd5b50565b6000813590506121e2816121bc565b92915050565b6000602082840312156121fe576121fd611f74565b5b600061220c848285016121d3565b91505092915050565b6000806040838503121561222c5761222b611f74565b5b600061223a8582860161211e565b925050602061224b8582860161211e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156122bb5780820151818401526020810190506122a0565b60008484015250505050565b6000601f19601f8301169050919050565b60006122e382612281565b6122ed818561228c565b93506122fd81856020860161229d565b612306816122c7565b840191505092915050565b6000819050919050565b600061233661233161232c84612160565b612311565b612160565b9050919050565b60006123488261231b565b9050919050565b600061235a8261233d565b9050919050565b61236a8161234f565b82525050565b600081519050919050565b600082825260208201905092915050565b600061239782612370565b6123a1818561237b565b93506123b181856020860161229d565b6123ba816122c7565b840191505092915050565b600060608301600083015184820360008601526123e282826122d8565b91505060208301516123f76020860182612361565b506040830151848203604086015261240f828261238c565b9150508091505092915050565b600061242883836123c5565b905092915050565b6000602082019050919050565b600061244882612255565b6124528185612260565b93508360208202850161246485612271565b8060005b858110156124a05784840389528151612481858261241c565b945061248c83612430565b925060208a01995050600181019050612468565b50829750879550505050505092915050565b600060208201905081810360008301526124cc818461243d565b905092915050565b600080604083850312156124eb576124ea611f74565b5b60006124f9858286016120c5565b925050602061250a858286016121d3565b9150509250929050565b61251d8161209a565b82525050565b60006020820190506125386000830184612514565b92915050565b600080fd5b6000606082840312156125595761255861253e565b5b81905092915050565b6000806040838503121561257957612578611f74565b5b6000612587858286016120c5565b925050602083013567ffffffffffffffff8111156125a8576125a7611f79565b5b6125b485828601612543565b9150509250929050565b600080604083850312156125d5576125d4611f74565b5b60006125e3858286016121d3565b92505060206125f4858286016120c5565b9150509250929050565b60008083601f84011261261457612613611f7e565b5b8235905067ffffffffffffffff81111561263157612630611f83565b5b60208301915083602082028301111561264d5761264c611f88565b5b9250929050565b6000819050826020600202820111156126705761266f611f88565b5b92915050565b60008190508260406002028201111561269257612691611f88565b5b92915050565b60008060008060008061014087890312156126b6576126b5611f74565b5b60006126c489828a016120c5565b965050602087013567ffffffffffffffff8111156126e5576126e4611f79565b5b6126f189828a016125fe565b9550955050604061270489828a01612654565b935050608061271589828a01612676565b92505061010061272789828a01612654565b9150509295509295509295565b6000606083016000830151848203600086015261275182826122d8565b91505060208301516127666020860182612361565b506040830151848203604086015261277e828261238c565b9150508091505092915050565b600060208201905081810360008301526127a58184612734565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008235600161014003833603038112612808576128076127dc565b5b80830191505092915050565b60008083356001602003843603038112612831576128306127dc565b5b80840192508235915067ffffffffffffffff821115612853576128526127e1565b5b60208301925060208202360383131561286f5761286e6127e6565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b60006128a160208401846120c5565b905092915050565b6128b28161209a565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126128e4576128e36128c2565b5b83810192508235915060208301925067ffffffffffffffff82111561290c5761290b6128b8565b5b602082023603831315612922576129216128bd565b5b509250929050565b600082825260208201905092915050565b600080fd5b82818337505050565b6000612955838561292a565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156129885761298761293b565b5b602083029250612999838584612940565b82840190509392505050565b600082905092915050565b6129bc60408383612940565b5050565b600082905092915050565b600060029050919050565b600081905092915050565b6000819050919050565b60006129f783836129b0565b60408301905092915050565b6000604082019050919050565b612a19816129cb565b612a2381846129d6565b9250612a2e826129e1565b8060005b83811015612a6757612a4482846129a5565b612a4e87826129eb565b9650612a5983612a03565b925050600181019050612a32565b505050505050565b60006101408301612a836000840184612892565b612a9060008601826128a9565b50612a9e60208401846128c7565b8583036020870152612ab1838284612949565b92505050612ac260408401846129a5565b612acf60408601826129b0565b50612add60808401846129c0565b612aea6080860182612a10565b50612af96101008401846129a5565b612b076101008601826129b0565b508091505092915050565b6000612b1e8383612a6f565b905092915050565b60008235600161014003833603038112612b4357612b426128c2565b5b82810191505092915050565b6000602082019050919050565b6000612b688385612877565b935083602084028501612b7a84612888565b8060005b87811015612bbe578484038952612b958284612b26565b612b9f8582612b12565b9450612baa83612b4f565b925060208a01995050600181019050612b7e565b50829750879450505050509392505050565b6000604082019050612be56000830186612192565b8181036020830152612bf8818486612b5c565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c3c82612066565b9150612c4783612066565b9250828203905081811115612c5f57612c5e612c02565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612cdb57607f821691505b602082108103612cee57612ced612c94565b5b50919050565b6000612cff82612066565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d3157612d30612c02565b5b600182019050919050565b60008083356001602003843603038112612d5957612d586127dc565b5b80840192508235915067ffffffffffffffff821115612d7b57612d7a6127e1565b5b602083019250600182023603831315612d9757612d966127e6565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612e0c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612dcf565b612e168683612dcf565b95508019841693508086168417925050509392505050565b6000612e49612e44612e3f84612066565b612311565b612066565b9050919050565b6000819050919050565b612e6383612e2e565b612e77612e6f82612e50565b848454612ddc565b825550505050565b600090565b612e8c612e7f565b612e97818484612e5a565b505050565b5b81811015612ebb57612eb0600082612e84565b600181019050612e9d565b5050565b601f821115612f0057612ed181612daa565b612eda84612dbf565b81016020851015612ee9578190505b612efd612ef585612dbf565b830182612e9c565b50505b505050565b600082821c905092915050565b6000612f2360001984600802612f05565b1980831691505092915050565b6000612f3c8383612f12565b9150826002028217905092915050565b612f568383612d9f565b67ffffffffffffffff811115612f6f57612f6e612c65565b5b612f798254612cc3565b612f84828285612ebf565b6000601f831160018114612fb35760008415612fa1578287013590505b612fab8582612f30565b865550613013565b601f198416612fc186612daa565b60005b82811015612fe957848901358255600182019150602085019450602081019050612fc4565b868310156130065784890135613002601f891682612f12565b8355505b6001600288020188555050505b50505050505050565b613027838383612f4c565b505050565b600061303782612180565b9050919050565b6130478161302c565b811461305257600080fd5b50565b600081356130628161303e565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff6130988461306b565b9350801983169250808416831791505092915050565b60006130b98261231b565b9050919050565b60006130cb826130ae565b9050919050565b6000819050919050565b6130e5826130c0565b6130f86130f1826130d2565b8354613078565b8255505050565b6000808335600160200384360303811261311c5761311b6127dc565b5b80840192508235915067ffffffffffffffff82111561313e5761313d6127e1565b5b60208301925060018202360383131561315a576131596127e6565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b601f8211156131c3576131948161316d565b61319d84612dbf565b810160208510156131ac578190505b6131c06131b885612dbf565b830182612e9c565b50505b505050565b6131d28383613162565b67ffffffffffffffff8111156131eb576131ea612c65565b5b6131f58254612cc3565b613200828285613182565b6000601f83116001811461322f576000841561321d578287013590505b6132278582612f30565b86555061328f565b601f19841661323d8661316d565b60005b8281101561326557848901358255600182019150602085019450602081019050613240565b86831015613282578489013561327e601f891682612f12565b8355505b6001600288020188555050505b50505050505050565b6132a38383836131c8565b505050565b60008101600083016132ba8185612d3c565b6132c581838661301c565b505050506001810160208301806132db81613055565b90506132e781846130dc565b50505060028101604083016132fc81856130ff565b613307818386613298565b505050505050565b61331982826132a8565b5050565b600082825260208201905092915050565b7f76616c696461746f72206973206e6f742073657420666f72207468697320726560008201527f7175657374206964000000000000000000000000000000000000000000000000602082015250565b600061338a60288361331d565b91506133958261332e565b604082019050919050565b600060208201905081810360008301526133b98161337d565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061341c602e8361331d565b9150613427826133c0565b604082019050919050565b6000602082019050818103600083015261344b8161340f565b9050919050565b6000819050919050565b600060ff82169050919050565b600061348461347f61347a84613452565b612311565b61345c565b9050919050565b61349481613469565b82525050565b60006020820190506134af600083018461348b565b92915050565b7f7265717565737420696420646f65736e27742065786973740000000000000000600082015250565b60006134eb60188361331d565b91506134f6826134b5565b602082019050919050565b6000602082019050818103600083015261351a816134de565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061357d60268361331d565b915061358882613521565b604082019050919050565b600060208201905081810360008301526135ac81613570565b9050919050565b6000813590506135c28161303e565b92915050565b6000602082840312156135de576135dd611f74565b5b60006135ec848285016135b3565b91505092915050565b600082825260208201905092915050565b82818337600083830152505050565b600061362183856135f5565b935061362e838584613606565b613637836122c7565b840190509392505050565b61364b8161234f565b82525050565b600061365d838561331d565b935061366a838584613606565b613673836122c7565b840190509392505050565b60006080820190506136936000830189612514565b81810360208301526136a6818789613615565b90506136b56040830186613642565b81810360608301526136c8818486613651565b9050979650505050505050565b7f4c656e6774682073686f756c642062652067726561746572207468616e203000600082015250565b600061370b601f8361331d565b9150613716826136d5565b602082019050919050565b6000602082019050818103600083015261373a816136fe565b9050919050565b7f4c656e677468206c696d69742065786365656465640000000000000000000000600082015250565b600061377760158361331d565b915061378282613741565b602082019050919050565b600060208201905081810360008301526137a68161376a565b9050919050565b7f537461727420696e646578206f7574206f6620626f756e647300000000000000600082015250565b60006137e360198361331d565b91506137ee826137ad565b602082019050919050565b60006020820190508181036000830152613812816137d6565b9050919050565b600061382482612066565b915061382f83612066565b925082820190508082111561384757613846612c02565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061388360208361331d565b915061388e8261384d565b602082019050919050565b600060208201905081810360008301526138b281613876565b9050919050565b7f6368616c6c656e67650000000000000000000000000000000000000000000000600082015250565b60006138ef60098361331d565b91506138fa826138b9565b602082019050919050565b6000602082019050818103600083015261391e816138e2565b9050919050565b60008151905061393481612107565b92915050565b6000602082840312156139505761394f611f74565b5b600061395e84828501613925565b91505092915050565b7f6164647265737320696e2070726f6f66206973206e6f7420612073656e64657260008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b60006139c360288361331d565b91506139ce82613967565b604082019050919050565b600060208201905081810360008301526139f2816139b6565b9050919050565b600082825260208201905092915050565b6000613a1683856139f9565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613a4957613a4861293b565b5b602083029250613a5a838584612940565b82840190509392505050565b613a7260408383612940565b5050565b600081905092915050565b613a8a816129cb565b613a948184613a76565b9250613a9f826129e1565b8060005b83811015613ad857613ab582846129a5565b613abf87826129eb565b9650613aca83612a03565b925050600181019050613aa3565b505050505050565b6000613aeb82612370565b613af581856135f5565b9350613b0581856020860161229d565b613b0e816122c7565b840191505092915050565b6000610140820190508181036000830152613b3581888a613a0a565b9050613b446020830187613a66565b613b516060830186613a81565b613b5e60e0830185613a66565b818103610120830152613b718184613ae0565b9050979650505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b613bc5613bc082613b7e565b613baa565b82525050565b600081905092915050565b6000613be182612370565b613beb8185613bcb565b9350613bfb81856020860161229d565b80840191505092915050565b60008160601b9050919050565b6000613c1f82613c07565b9050919050565b6000613c3182613c14565b9050919050565b613c49613c4482612180565b613c26565b82525050565b6000613c5b8286613bb4565b600482019150613c6b8285613bd6565b9150613c778284613c38565b601482019150819050949350505050565b6000613c948284613bd6565b915081905092915050565b7f4661696c656420746f207665726966792070726f6f6620776974686f7574207260008201527f657665727420726561736f6e0000000000000000000000000000000000000000602082015250565b6000613cfb602c8361331d565b9150613d0682613c9f565b604082019050919050565b60006020820190508181036000830152613d2a81613cee565b9050919050565b6000604082019050613d466000830185612192565b613d536020830184612070565b9392505050565b6000604082019050613d6f6000830185612192565b613d7c6020830184612514565b939250505056fea26469706673582212203f2248adc30350b7050e44fcae72423b439c7ab4474af8a316ab1a6bafb79ae564736f6c63430008100033";

export class ScenarioVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ScenarioVerifier> {
    return super.deploy(overrides || {}) as Promise<ScenarioVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ScenarioVerifier {
    return super.attach(address) as ScenarioVerifier;
  }
  connect(signer: Signer): ScenarioVerifier__factory {
    return super.connect(signer) as ScenarioVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScenarioVerifierInterface {
    return new utils.Interface(_abi) as ScenarioVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScenarioVerifier {
    return new Contract(address, _abi, signerOrProvider) as ScenarioVerifier;
  }
}
