/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TxAuthDataVerifier,
  TxAuthDataVerifierInterface,
} from "../TxAuthDataVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlockExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "functionCallData",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockExpiration",
            type: "uint256",
          },
        ],
        internalType: "struct TxAuthDataVerifier.TxAuthData",
        name: "_txAuthData",
        type: "tuple",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080346100a757601f6105a538819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600086a360015416176001556104e290816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b60009260e0908435821c9182630c28c07a1461023f57505080636834e3a8146101645780636c19e783146101f9578063715018a61461019c5780637ecebe00146101645780638da5cb5b146101385763f2fde38b1461007357600080fd5b346101345760203660031901126101345761008c610425565b610094610454565b6001600160a01b039081169182156100e2575083546001600160a01b0319811683178555925192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b608490602085519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b505034610160578160031936011261016057905490516001600160a01b039091168152602090f35b5080fd5b5050346101605760203660031901126101605760209181906001600160a01b0361018c610425565b1681526002845220549051908152f35b5050346101605781600319360112610160576101b6610454565b81546001600160a01b03198116835590519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b50503461016057602036600319011261016057610214610425565b61021c610454565b600180546001600160a01b0319166001600160a01b039290921691909117905551f35b9094915034610160576020946003199086823601126103e95784359167ffffffffffffffff908184116103b75760c09084360301126103e55760c0820195828710828811176103d257868852838101358281116103ce57840190366023830112156103ce57808201359283116103bb57506102c3601f8301601f19168a01886103ed565b81875236602483830101116103b7579381869260248399979695960183870137840101528282526102f660248201610440565b93848884015261030860448301610440565b94858885015260648301359182606086015260a46084850135948560808801520135948560a08201528a8a51998a9851935b84811061039f57505050509161039296939186959360a89701946bffffffffffffffffffffffff19809260601b168c87015260601b1660348501526048840152606883015260888201520360888101845201826103ed565b8281519101209051908152f35b8084018201519981018301999099528a98820161033a565b8580fd5b634e487b7160e01b875260419052602486fd5b8680fd5b634e487b7160e01b865260419052602485fd5b8480fd5b8380fd5b90601f8019910116810190811067ffffffffffffffff82111761040f57604052565b634e487b7160e01b600052604160045260246000fd5b600435906001600160a01b038216820361043b57565b600080fd5b35906001600160a01b038216820361043b57565b6000546001600160a01b0316330361046857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212200e9f7c79c1d1f617326b24d17f20a0a1286d865777f5652e049e5067d2e32f3064736f6c63430008100033";

export class TxAuthDataVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TxAuthDataVerifier> {
    return super.deploy(
      _signer,
      overrides || {}
    ) as Promise<TxAuthDataVerifier>;
  }
  getDeployTransaction(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, overrides || {});
  }
  attach(address: string): TxAuthDataVerifier {
    return super.attach(address) as TxAuthDataVerifier;
  }
  connect(signer: Signer): TxAuthDataVerifier__factory {
    return super.connect(signer) as TxAuthDataVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TxAuthDataVerifierInterface {
    return new utils.Interface(_abi) as TxAuthDataVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TxAuthDataVerifier {
    return new Contract(address, _abi, signerOrProvider) as TxAuthDataVerifier;
  }
}
