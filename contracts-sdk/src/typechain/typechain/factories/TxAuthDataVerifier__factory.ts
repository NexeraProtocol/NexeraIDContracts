/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TxAuthDataVerifier,
  TxAuthDataVerifierInterface,
} from "../TxAuthDataVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlockExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockExpiration",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "functionCallData",
            type: "bytes",
          },
        ],
        internalType: "struct TxAuthDataVerifier.TxAuthData",
        name: "_txAuthData",
        type: "tuple",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080346100a757601f6105db38819003918201601f19168301916001600160401b038311848410176100ac578084926020946040528339810103126100a757516001600160a01b0390818116908190036100a75760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600086a3600154161760015561051890816100c38239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081636834e3a8146103ef575080636c19e783146103a9578063715018a61461034c5780637ecebe0014610314578063801954a8146101615780638da5cb5b146101355763f2fde38b1461007057600080fd5b3461013157602036600319011261013157610089610423565b61009161048a565b6001600160a01b039081169182156100df575083546001600160a01b0319811683178555925192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b608490602085519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b50503461015d578160031936011261015d57905490516001600160a01b039091168152602090f35b5080fd5b509134610311576020926003199184833601126103115781359167ffffffffffffffff938484116101315760c090843603011261015d5784519260c08401848110868211176102fe578652808201358452868401946024820135865286850194604483013586526101d46064840161043e565b91606082019283526101e86084850161043e565b936080830194855260a4810135908282116102fa570194366023870112156102e357808601359182116102e7575088519461022c601f8301601f19168c0187610452565b81865236602483830101116102e35781879260248d939a9897969a0183880137850101528260a082015251955192519451905187519586948a86019889528986015260608501526bffffffffffffffffffffffff19809260601b16608085015260601b16609483015280519087845b8381106102cc57505050906102c29260a89282019083820152036088810184520182610452565b5190209051908152f35b80830182015187820160a80152869450810161029b565b8680fd5b634e487b7160e01b875260419052602486fd5b8780fd5b634e487b7160e01b845260418352602484fd5b80fd5b50503461015d57602036600319011261015d5760209181906001600160a01b0361033c610423565b1681526002845220549051908152f35b50503461015d578160031936011261015d5761036661048a565b81546001600160a01b03198116835590519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b50503461015d57602036600319011261015d576103c4610423565b6103cc61048a565b600180546001600160a01b0319166001600160a01b039290921691909117905551f35b84908434610131576020366003190112610131576020926001600160a01b03610416610423565b1681526002845220548152f35b600435906001600160a01b038216820361043957565b600080fd5b35906001600160a01b038216820361043957565b90601f8019910116810190811067ffffffffffffffff82111761047457604052565b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b0316330361049e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212209272c9d310765b3e36d53323d36791cebcefb39ef814d93a5c1d7a90473dab3464736f6c63430008100033";

export class TxAuthDataVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TxAuthDataVerifier> {
    return super.deploy(
      _signer,
      overrides || {}
    ) as Promise<TxAuthDataVerifier>;
  }
  getDeployTransaction(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, overrides || {});
  }
  attach(address: string): TxAuthDataVerifier {
    return super.attach(address) as TxAuthDataVerifier;
  }
  connect(signer: Signer): TxAuthDataVerifier__factory {
    return super.connect(signer) as TxAuthDataVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TxAuthDataVerifierInterface {
    return new utils.Interface(_abi) as TxAuthDataVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TxAuthDataVerifier {
    return new Contract(address, _abi, signerOrProvider) as TxAuthDataVerifier;
  }
}
