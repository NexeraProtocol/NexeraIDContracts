/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VerifierSig, VerifierSigInterface } from "../VerifierSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[11]",
        name: "_pubSignals",
        type: "uint256[11]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657610ad9908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63b9c6ea871461002857600080fd5b3461010c5761026036600319011261010c576100433661010f565b3660c4116101085761005436610121565b906102643681116101045791610100916100fb6020959461040060405261007d6101043561012f565b6100896101243561012f565b6100956101443561012f565b6100a16101643561012f565b6100ad6101843561012f565b6100b96101a43561012f565b6100c56101c43561012f565b6100d16101e43561012f565b6100dd6102043561012f565b6100e96102243561012f565b6100f56102443561012f565b3561012f565b610750565b8152f35b8380fd5b5080fd5b80fd5b9060049160441161011c57565b600080fd5b9060c4916101041161011c57565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47111561015857565b6000805260206000f35b604051907f11788a050c473369bbac1d2e011ec3236dc2e426bf33950035d783539419e03b82527f1622d9ce6cd690e847704358fe99032bcf337ba5c8f17181b36216c8a61b89b46020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f19dcba7a8a64168495e184fa3ce0be0d08ab53712d2bb51ebd016cab0679c89b82527f0b70d29ed3ae4b77ab974d5624d17cef7bc8a6c91d157a36637dbc85a311a5976020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f03d16811819c4ff82df949af146566ada7540c0e620d0a3a243927b0a4f6b0db82527f10412904e7135f93df873a768f47e26eaf7649cf526233820d4e705ee7cc81686020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f161628f234fb50ecce9c863ea7a616d4790276ed14f410062964ce932e77bf0682527f0a837cd8825cf5fa6feeb51b4b85f3c411db9db2df64da913a0fedc14d12d77d6020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f233e0ce24b641fa92543e2251944350e1ba373aff7a2f6296403855ba1163b2d82527f10a808acd38d95f293e7595ac1d254314023fe5a4b417d46a457216250683b1a6020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f0c2d90736caddcdbe291f31a2543dd6edaa258a516960ffb9c3cea7e2da18d1582527f20cf4b8faf4cc3ddef5428e3ec7ac6ab8fac15d3a408ab9be92c7c3636959bff6020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f2af675475a9a8c80732328cca338fdc7b0d082049982557e0e663a9fd85ce44482527f24ea85494a29b0493f759cdecc86f90166567ba7fa3dfafc612441df821298706020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f0da6d80e9f321df5ac17ec71cf7b1d5a7564f79b51be0c74bedb8c2266a4ba8e82527f070d9dbbd07134b5bbee59c1d7f8e3d631430dd6394698fbba5f53384848bdf06020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f2d23bb3f195568e6d21110df201b9520e2a0e49f433ac618afc3536ebef3adb882527f1d6c48d0c956333d81951c4ec0240786f431aa7899010a6360bd50a063dd50976020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f032eda83efb2182f8abd68311a50bd1c1acde67ab2959d45fbc26941639e5ad482527f105e3dd896cb03b12043762dce2f72ea2a58a985fea546ba5bbd115d0bef7aaa6020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b604051907f293ec4a0dd36216f02bcdc9c329cffaa450d2b5a44f55b61cabfc8300929a92a82527f21ef8dfeae61f0040d207a37d86209217a484587294fcde52f50d2095167820f6020830152604082019081526107cf196040836060816007855a01fa156101585760409260066080939284938451905260a05160608401525a01fa1561015857565b6020907f0992267e58f93dac7a7beb752274c98029cfc357435f878ea72b030d1085100a6080527ea1152a41bb3aa4fbe1aa7882c2e2a8e1b6e968f077ff4af210d42e0d7072b560a0526107a661010435610162565b6107b2610124356101ec565b6107be61014435610276565b6107ca61016435610300565b6107d66101843561038a565b6107e26101a435610414565b6107ee6101c43561049e565b6107fa6101e435610528565b610806610204356105b2565b6108126102243561063c565b61081e610244356106c6565b61010092818492358352837f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479101358103066101205260443561014052606435610160526084356101805260a4356101a0527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e26101c0527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266101e0527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c610200527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab610220527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a7610240527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610260526080516102805260a0516102a0527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26102c0527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6102e05282610300917f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b83527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610320528035610340520135610360527f1469e40d51ed9ca8f5677275a3111e52ef96f34c58c29d156f87087010907429610380527f03c7e502253d6cfe7a9314775ac2d0fe4704763560fd70e78bec59fd4f6da94b6103a0527f2b90580b4fd31c34ac334b8581fd0de1b6d8af80163ae34b60a5fc851797a24b6103c0527f2a1bf8e0abf527ccfb58440a7364da4944f71aac2c9b5faa5c9a26f37034f2cc6103e0528160086107cf195a01fa9051169056fea2646970667358221220b1e42e789cf763b5c009b91dd0b2bfbae56b3ddb44f731e22420cc5595dc82e664736f6c63430008100033";

export class VerifierSig__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifierSig> {
    return super.deploy(overrides || {}) as Promise<VerifierSig>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VerifierSig {
    return super.attach(address) as VerifierSig;
  }
  connect(signer: Signer): VerifierSig__factory {
    return super.connect(signer) as VerifierSig__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierSigInterface {
    return new utils.Interface(_abi) as VerifierSigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifierSig {
    return new Contract(address, _abi, signerOrProvider) as VerifierSig;
  }
}
