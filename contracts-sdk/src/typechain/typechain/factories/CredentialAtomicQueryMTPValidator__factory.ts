/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CredentialAtomicQueryMTPValidator,
  CredentialAtomicQueryMTPValidatorInterface,
} from "../CredentialAtomicQueryMTPValidator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedCircuitIds",
    outputs: [
      {
        internalType: "string[]",
        name: "ids",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gistRootExpirationTimeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifierContractAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateContractAddr",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "inputIndexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
    ],
    name: "parseCommonPubSignals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "merklized",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "issuerState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "circuitQueryHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "requestID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "challenge",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gistRoot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "issuerID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isRevocationChecked",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "issuerClaimNonRevState",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct CredentialAtomicQueryValidator.CommonPubSignals",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "proofExpirationTimeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revocationStateExpirationTimeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeout",
        type: "uint256",
      },
    ],
    name: "setGISTRootExpirationTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeout",
        type: "uint256",
      },
    ],
    name: "setProofExpirationTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expirationTimeout",
        type: "uint256",
      },
    ],
    name: "setRevocationStateExpirationTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stateContractAddr",
        type: "address",
      },
    ],
    name: "setStateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "contract IState",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657611fe0908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80631134b480146101675780631af6d99b1461015e5780631c4c7fd814610155578063485cc9551461014c57806348d36920146101435780635307e79f1461013a578063652377dc14610131578063715018a6146101285780638da5cb5b1461011f5780638eff038a146101165780639a8a5b171461010d578063b16a394f14610104578063c19d93fb146100fb578063cb5aa558146100f2578063f2fde38b146100e9578063fb5af2a2146100e05763ffa1ad74146100d857600080fd5b61000e6109b3565b5061000e6108be565b5061000e610786565b5061000e6106d8565b5061000e6106ad565b5061000e61061c565b5061000e6104d9565b5061000e6104b9565b5061000e61048f565b5061000e61042a565b5061000e610407565b5061000e61037b565b5061000e61030d565b5061000e61021a565b5061000e6101d6565b5061000e61018a565b503461000e57602036600319011261000e576101816109fa565b60043561025e55005b503461000e57600036600319011261000e57602061025d54604051908152f35b600435906001600160a01b038216820361000e57565b602435906001600160a01b038216820361000e57565b503461000e57602036600319011261000e576101f06101aa565b6101f86109fa565b61025b80546001600160a01b0319166001600160a01b03909216919091179055005b503461000e57604036600319011261000e576102346101aa565b61028061023f6101c0565b6000549261026460ff8560081c1615809581966102ff575b81156102df575b50610aa0565b83610277600160ff196000541617600055565b6102c657610fa4565b610287575b005b61029761ff001960005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b6102da61010061ff00196000541617600055565b610fa4565b303b159150816102f1575b503861025e565b6001915060ff1614386102ea565b600160ff8216109150610257565b503461000e57602036600319011261000e576103276109fa565b60043561025d55005b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b9060249160641161000e57565b9060e4916101241161000e57565b503461000e5761014036600319011261000e576001600160401b0360043581811161000e576103ae903690600401610330565b91906103b936610360565b3660e41161000e576103ca3661036d565b90610124359484861161000e573660238701121561000e57856004013594851161000e57366024868801011161000e57602461028596019361173d565b503461000e57602036600319011261000e576104216109fa565b60043561025c55005b503461000e5760008060031936011261048c576104456109fa565b603380546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b503461000e57600036600319011261000e576033546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e57602061025c54604051908152f35b503461000e57600036600319011261000e57602061025e54604051908152f35b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761052b57604052565b6105336104f9565b604052565b90601f801991011681019081106001600160401b0382111761052b57604052565b6040519061016082018281106001600160401b0382111761052b57604052565b6040519061014082018281106001600160401b0382111761052b57604052565b60405190602082018281106001600160401b0382111761052b57604052565b81601f8201121561000e578035906001600160401b03821161060f575b604051926105ed601f8401601f191660200185610538565b8284526020838301011161000e57816000926020809301838601378301015290565b6106176104f9565b6105d5565b503461000e57602036600319011261000e576004356001600160401b03811161000e576106506106559136906004016105b8565b610f56565b54801561067157604051600019919091018152602090f35b0390f35b60405162461bcd60e51b8152602060048201526014602482015273125b9c1d5d081b985b59481b9bdd08199bdd5b9960621b6044820152606490fd5b503461000e57600036600319011261000e5761025b546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e576004356001600160401b03811161000e5761071561070f610160923690600401610330565b90611229565b60405190805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201519083015261012080820151908301526101408091015190820152f35b503461000e57602036600319011261000e576107a06101aa565b6107a86109fa565b6001600160a01b038116156107c05761028590610a52565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60005b8381106108275750506000910152565b8181015183820152602001610817565b9060209161085081518092818552858086019101610814565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106108905750505050505090565b90919293949584806108ae600193603f198682030187528a51610837565b9801930193019194939290610880565b503461000e5760008060031936011261048c5761025a908154906108e1826113b5565b916040916108f183519485610538565b8184526020948585019082528582209582915b8483106109185785518061066d898261085c565b85518285928a549261092984610cef565b808252600194808616908115610997575060011461095f575b50610951816001960382610538565b815201980192019196610904565b8c8952838920955088905b8082106109805750810183019450610951610942565b86548383018601529585019587949091019061096a565b60ff19168584015250151560051b810183019450610951610942565b503461000e57600036600319011261000e5761066d6040516109d481610510565b6005815264312e302e3160d81b6020820152604051918291602083526020830190610837565b6033546001600160a01b03163303610a0e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3565b15610aa757565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b60405190610b1082610510565b601082526f0c6d2e4c6ead2e8a2eacae4f290c2e6d60831b6020830152565b60405190610b3c82610510565b60098252681c995c5d595cdd125160ba1b6020830152565b60405190610b6182610510565b60098252686368616c6c656e676560b81b6020830152565b60405190610b8682610510565b600882526719da5cdd149bdbdd60c21b6020830152565b60405190610baa82610510565b60088252671a5cdcdd595c925160c21b6020830152565b60405190610bce82610510565b6014825273697373756572436c61696d4964656e537461746560601b6020830152565b60405190610bfe82610510565b60138252721a5cd4995d9bd8d85d1a5bdb90da1958dad959606a1b6020830152565b60405190610c2d82610510565b6016825275697373756572436c61696d4e6f6e526576537461746560501b6020830152565b60405190610c5f82610510565b6009825268074696d657374616d760bc1b6020830152565b60405190606082018281106001600160401b03821117610ccb575b60405260218252603760f91b6040837f63726564656e7469616c41746f6d696351756572794d545056324f6e4368616960208201520152565b610cd36104f9565b610c92565b50634e487b7160e01b600052601160045260246000fd5b90600182811c92168015610d1f575b6020831014610d0957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cfe565b818110610d34575050565b60008155600101610d29565b9190601f8111610d4f57505050565b610d7b926000526020600020906020601f840160051c83019310610d7d575b601f0160051c0190610d29565b565b9091508190610d6e565b91909182516001600160401b038111610e56575b610daf81610da98454610cef565b84610d40565b602080601f8311600114610deb575081929394600092610de0575b50508160011b916000199060031b1c1916179055565b015190503880610dca565b90601f19831695610e0185600052602060002090565b926000905b888210610e3e57505083600195969710610e25575b505050811b019055565b015160001960f88460031b161c19169055388080610e1b565b80600185968294968601518155019501930190610e06565b610e5e6104f9565b610d9b565b9061025a918254600193848155818510610ed0575b505061025a6000527fce0236a5efe714299a42f6f2c9cfc717a528be41a4d75e4891e940c13ffa4685906000905b848210610eb4575050509050565b84602082610ec483945187610d87565b01930191019091610ea6565b600090815284806020832093840193015b838110610eef575050610e78565b610ef98154610cef565b80610f08575b50018590610ee1565b601f9083828211600114610f23575050508281555b38610eff565b610f4492610f3685600052602060002090565b920160051c82019101610d29565b60008181526020812081835555610f1d565b6020610f6f918160405193828580945193849201610814565b810161025f81520301902090565b6020610f96918160405193828580945193849201610814565b810161025981520301902090565b906110e2610d7b926001610fd8604051610fbd81610510565b60098152681b595c9adb1a5e995960ba1b6020820152610f56565b55611000604051610fe881610510565b60068152651d5cd95c925160d21b6020820152611e6a565b61101061100b610b03565b611e78565b61102061101b610b2f565b611e83565b61103061102b610b54565b611e8e565b61104061103b610b79565b611e99565b61105061104b610b9d565b611ea4565b61106061105b610bc1565b611eaf565b61107061106b610bf1565b611eba565b61108061107b610c20565b611ec5565b61109061108b610c52565b611ed0565b6110aa61109b610599565b6110a3610c77565b8152610e63565b6001600160a01b03166110c36110be610c77565b610f7d565b80546001600160a01b0319166001600160a01b03909216919091179055565b611354565b6040519061016082018281106001600160401b0382111761114c575b604052816101406000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e082015282610100820152826101208201520152565b6111546104f9565b611103565b50634e487b7160e01b600052603260045260246000fd5b90156111795790565b611181611159565b90565b60209160011015611193570190565b61119b611159565b0190565b60409160021015611193570190565b60609160031015611193570190565b60809160041015611193570190565b60a09160051015611193570190565b60c09160061015611193570190565b60e09160071015611193570190565b6101009160081015611193570190565b6101209160091015611193570190565b61014091600a1015611193570190565b906112326110e7565b5061123d8183611170565b35916112498282611184565b3591611255818361119f565b3561126082846111ae565b3561126b83856111bd565b3561127684866111cc565b359161128285876111db565b359361128e86886111ea565b356112af61129c888a6111f9565b35976112a8818b611209565b3599611219565b35986112b9610559565b9a8b5260208b015260408a01526060890152608088015260a087015260c086015260e085015261010084015261012083015261014082015290565b156112fb57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6113ac9060ff60005460081c169061136b826112f4565b610e1061025c81905561025d81905561025e5561025b80546001600160a01b0319166001600160a01b039092169190911790556113a7816112f4565b6112f4565b610d7b33610a52565b6020906001600160401b0381116113ce575b60051b0190565b6113d66104f9565b6113c7565b81601f8201121561000e578035916113f2836113b5565b926114006040519485610538565b808452602092838086019260051b82010192831161000e578301905b82821061142a575050505090565b8135815290830190830161141c565b9080601f8301121561000e57813590611451826113b5565b9261145f6040519485610538565b828452602092838086019160051b8301019280841161000e57848301915b84831061148d5750505050505090565b82356001600160401b03811161000e5786916114ae848480948901016105b8565b81520192019161147d565b8015150361000e57565b3590610d7b826114b9565b60208183031261000e5780356001600160401b039182821161000e5701906101408284031261000e576114ff610579565b9282358452602083013560208501526040830135604085015260608301356060850152608083013582811161000e578161153a9185016113db565b608085015260a083013560a085015260c083013582811161000e57816115619185016113db565b60c085015260e083013591821161000e5761157d918301611439565b60e08301526101006115908183016114c3565b90830152610120809101359082015290565b602090805115611193570190565b60209181518110156115c5575b60051b010190565b6115cd611159565b6115bd565b156115d957565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a590818da5c98dd5a5d08125160721b6044820152606490fd5b9081602091031261000e5751611181816114b9565b929391604080928537606460008584015b846002831061167b575050505060c0840137610120610100830181905282018190526001600160fb1b03811161000e5760051b90816101409384830137010190565b808281866001953701930191019091611639565b506040513d6000823e3d90fd5b156116a357565b60405162461bcd60e51b8152602060048201526012602482015271141c9bdbd9881a5cc81b9bdd081d985b1a5960721b6044820152606490fd5b156116e457565b60405162461bcd60e51b815260206004820152602b60248201527f5175657279206861736820646f6573206e6f74206d617463682074686520726560448201526a71756573746564206f6e6560a81b6064820152608490fd5b6117db826020836117e09661175b6040999a610d7b9c8101906114ce565b9960e08b0191600161178661177961177386516115a2565b51610f7d565b546001600160a01b031690565b935151148061185e575b611799906115d2565b6117b88b5196879586948594630984a41f60e21b865260048601611628565b03916001600160a01b03165afa908115611851575b600091611823575b5061169c565b611229565b916117f4606084015160a0830151146116dd565b6118048351602083015190611e06565b61181960e084019160c0835191015190611d74565b5191015190611942565b611844915060203d811161184a575b61183c8183610538565b810190611613565b386117d5565b503d611832565b61185961168f565b6117cd565b506001600160a01b0383161515611790565b908160e091031261000e5760c06040519160e083018381106001600160401b038211176118db575b604052805183526020810151602084015260408101516040840152606081015160608401526080810151608084015260a081015160a0840152015160c082015290565b6118e36104f9565b611898565b156118ef57565b60405162461bcd60e51b815260206004820152602560248201527f537461746520646f65736e277420657869737420696e20737461746520636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b61198561197f8361195a61195585611c80565b611c67565b602081519101519061ffff60f01b918281169160028110611a1a575b50509050611ad0565b82141590565b61198d575050565b61025b546040516329e4398960e11b8152600481018390526024810193909352610d7b929060e090829060449082906001600160a01b03165afa908115611a0d575b6000916119df575b5051146118e8565b611a00915060e03d8111611a06575b6119f88183610538565b810190611870565b386119d7565b503d6119ee565b611a1561168f565b6119cf565b8391925060020360031b1b1616803880611976565b15611a3657565b60405162461bcd60e51b815260206004820152602160248201527f436865636b73756d207265717569726573203239206c656e67746820617272616044820152607960f81b6064820152608490fd5b15611a8c57565b606460405162461bcd60e51b815260206004820152602060248201527f69644279746573207265717569726573203331206c656e6774682061727261796044820152fd5b90611955611add91611c80565b908151611b02601a198201828111611be9575b611afb855191611f54565b1115611f6a565b60405192601b84019101603684015b808310611bd6575050611bb6601f611b67611b6c86611b5b611b67602098611bc298601b6111819c5287199788910116928391826040528b830160029161ffff60f01b1681520190565b03868101835282610538565b611edb565b91611b7a601d845114611a2f565b611b99611b8684611c0e565b60ff61ff008260081b169160081c161790565b60405194859188830160029161ffff60f01b9060f01b1681520190565b03908101845283610538565b611bcf601f825114611a85565b0151611c80565b9091825181526020809101920190611b11565b611bf1610cd8565b611af0565b6001906000198114611c06570190565b61119b610cd8565b90600091611c1f601d825114611a2f565b6000925b8151841015611c6257611c4f906020858401015160f81c61ffff80921601908111611c55575b93611bf6565b92611c23565b611c5d610cd8565b611c49565b925050565b9060405191611c7583610510565b602083526020830152565b8060081c9060081b907eff000000ff000000ff000000ff000000ff000000ff000000ff000000ff00007fff000000ff000000ff000000ff000000ff000000ff000000ff000000ff0000007dff000000ff000000ff000000ff000000ff000000ff000000ff000000ff0084167cff000000ff000000ff000000ff000000ff000000ff000000ff000000ff84161760101b931691161760101c177bffffffff00000000ffffffff00000000ffffffff00000000ffffffff80198260201b169160201c161777ffffffffffffffff0000000000000000ffffffffffffffff80198260401b169160401c16178060801b9060801c1790565b815115611e025760005b8251811015611dab57611d9181846115b0565b518214611da657611da190611bf6565b611d7e565b505050565b60405162461bcd60e51b815260206004820152602960248201527f497373756572206973206e6f74206f6e2074686520416c6c6f776564204973736044820152681d595c9cc81b1a5cdd60ba1b6064820152608490fd5b5050565b9060009015611e62575060ff60015b1603611e1d57565b60405162461bcd60e51b815260206004820152601e60248201527f4d65726b6c697a65642076616c7565206973206e6f7420636f727265637400006044820152606490fd5b60ff90611e15565b611e75600291610f56565b55565b611e75600391610f56565b611e75600491610f56565b611e75600591610f56565b611e75600691610f56565b611e75600791610f56565b611e75600891610f56565b611e75600991610f56565b611e75600a91610f56565b611e75600b91610f56565b6040519181518084526020808501918501928184019282808701915b858110611f445750505080518093875182018852940193828086019201905b828110611f35575050505090603f91601f199351011501011660405290565b81518152908301908301611f16565b8251815291810191849101611ef7565b90601b8201809211611f6257565b610d7b610cd8565b15611f7157565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fdfea26469706673582212206c4b439764515ec8865f66236c6eb8f9c7c04a1246e161805e5517e069b1d19664736f6c63430008100033";

export class CredentialAtomicQueryMTPValidator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CredentialAtomicQueryMTPValidator> {
    return super.deploy(
      overrides || {}
    ) as Promise<CredentialAtomicQueryMTPValidator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CredentialAtomicQueryMTPValidator {
    return super.attach(address) as CredentialAtomicQueryMTPValidator;
  }
  connect(signer: Signer): CredentialAtomicQueryMTPValidator__factory {
    return super.connect(signer) as CredentialAtomicQueryMTPValidator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CredentialAtomicQueryMTPValidatorInterface {
    return new utils.Interface(
      _abi
    ) as CredentialAtomicQueryMTPValidatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CredentialAtomicQueryMTPValidator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CredentialAtomicQueryMTPValidator;
  }
}
