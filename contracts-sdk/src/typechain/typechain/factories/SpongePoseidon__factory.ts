/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SpongePoseidon,
  SpongePoseidonInterface,
} from "../SpongePoseidon";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "hash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001a5761038f9081610020823930815050f35b600080fdfe608060408181526004918236101561001657600080fd5b6000803560e01c6340ec6e491461002c57600080fd5b6020908160031936011261028f5784359267ffffffffffffffff958685116102a857366023860112156102a857848101359687116102a85760059560243689891b88018201116102a457919796610082846102ac565b848452848685015284828501526060928584860152608097868987015260a095878782015299879a889b899c8a9d8e925b8563ffffffff80951610156101f45750600192811660068110156101e0578f891b641fffffffe09081168801890135838b1b90911686015288036101c35750505089610112918e88519384928392631eb694f160e31b8452830161032b565b038173__$037d0ef5096c0205b2ca530e7bc3ca349a$__5af49081156101b9578991610188575b50918a9b9c9391838b9694908b809e818b519a6101558c6102ac565b8b0152818b8b0152818c8b01528901528b8b890152875261017760019f610300565b9d9c9e8e9294969f979395976100b3565b90508981813d83116101b2575b61019f81836102de565b810103126101ae57518a610139565b8880fd5b503d610195565b86513d8b823e3d90fd5b9d9e9593919c9d6101da6101779198969498610300565b9f610300565b508f8c60328992634e487b7160e01b835252fd5b95505099975050935050879395508a9150610214575b5050505051908152f35b8461023394959650519384928392631eb694f160e31b8452830161032b565b038173__$037d0ef5096c0205b2ca530e7bc3ca349a$__5af4918215610299578092610266575b5050908383818061020a565b9091508382813d8311610292575b61027e81836102de565b8101031261028f575051838061025a565b80fd5b503d610274565b8351903d90823e3d90fd5b8480fd5b8280fd5b60c0810190811067ffffffffffffffff8211176102c857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176102c857604052565b63ffffffff8091169081146103155760010190565b634e487b7160e01b600052601160045260246000fd5b60c0810192916000915b6006831061034257505050565b60019082518152602080910192019201919061033556fea264697066735822122055e3895740133792c70d3d7119597e5ea47131ea63625fc4972d7db7deae737e64736f6c63430008100033";

type SpongePoseidonConstructorParams =
  | [linkLibraryAddresses: SpongePoseidonLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpongePoseidonConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SpongePoseidon__factory extends ContractFactory {
  constructor(...args: SpongePoseidonConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SpongePoseidon__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: SpongePoseidonLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$037d0ef5096c0205b2ca530e7bc3ca349a\\$__", "g"),
      linkLibraryAddresses["@iden3/contracts/lib/Poseidon.sol:PoseidonUnit6L"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SpongePoseidon> {
    return super.deploy(overrides || {}) as Promise<SpongePoseidon>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SpongePoseidon {
    return super.attach(address) as SpongePoseidon;
  }
  connect(signer: Signer): SpongePoseidon__factory {
    return super.connect(signer) as SpongePoseidon__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpongePoseidonInterface {
    return new utils.Interface(_abi) as SpongePoseidonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpongePoseidon {
    return new Contract(address, _abi, signerOrProvider) as SpongePoseidon;
  }
}

export interface SpongePoseidonLibraryAddresses {
  ["@iden3/contracts/lib/Poseidon.sol:PoseidonUnit6L"]: string;
}
