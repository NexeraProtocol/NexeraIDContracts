/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NexeraZKPVerifier,
  NexeraZKPVerifierInterface,
} from "../NexeraZKPVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "contract ICircuitValidator",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "ZKPRequestSet",
    type: "event",
  },
  {
    inputs: [],
    name: "REQUESTS_RETURN_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "getZKPRequest",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getZKPRequests",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZKPRequestsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "requestIdExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setNexeraZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "submitZKPResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09084a361148c90816100618239f35b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80631905e7b1146101035780635f9e60d7146100fa5780636508e1b4146100f1578063715018a6146100e85780638da5cb5b146100df5780639f5223e0146100d6578063ab7bcfb7146100cd578063b45c0fdf146100c4578063b68967e2146100bb578063c76d0845146100b2578063f2fde38b146100a95763f82ddf0a146100a157600080fd5b61000e6108d9565b5061000e61080c565b5061000e61076d565b5061000e6106db565b5061000e61063e565b5061000e6105ff565b5061000e610481565b5061000e610401565b5061000e61039f565b5061000e61037f565b5061000e61020a565b503461000e57600036600319011261000e5760206040516103e88152f35b60005b8381106101345750506000910152565b8181015183820152602001610124565b9060209161015d81518092818552858086019101610121565b601f01601f1916010190565b6101a59160406101828351606084526060840190610144565b9260018060a01b0360208201511660208401520151906040818403910152610144565b90565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106101dc5750505050505090565b90919293949584806101fa600193603f198682030187528a51610169565b98019301930191949392906101cc565b503461000e57604036600319011261000e576004356024356101f75490801561033a576103e881116102fd5761024b90610245838510611342565b8361138a565b908082116102f5575b5061026761026283836112b9565b6112d0565b91805b828110610283576040518061027f86826101a8565b0390f35b806102ea6102c66102ac6102996102f0956111b3565b90546001600160401b039160031b1c1690565b6001600160401b03166000526101f6602052604060002090565b6102d96102d386856112b9565b91610d7b565b6102e38289611320565b5286611320565b5061124e565b61026a565b905038610254565b60405162461bcd60e51b815260206004820152601560248201527413195b99dd1a081b1a5b5a5d08195e18d959591959605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4c656e6774682073686f756c642062652067726561746572207468616e2030006044820152606490fd5b503461000e57600036600319011261000e5760206101f754604051908152f35b503461000e576000806003193601126103fe576103ba611397565b80546001600160a01b0319811682556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b80fd5b503461000e57600036600319011261000e576000546040516001600160a01b039091168152602090f35b600435906001600160401b038216820361000e57565b600319919060408382011261000e576001600160401b0390600435828116810361000e579360243592831161000e578260609203011261000e5760040190565b503461000e5761049036610441565b90610499611397565b6001600160401b039060009180821683526020936101f6855260408420916104c18280611037565b9182116105f2575b6104dd826104d78654610cab565b86611069565b8590601f8311600114610571579261054961052688998561055c9896610553966002996105619d92610566575b50508160011b916000199060031b1c19161786555b83016110bd565b6001850180546001600160a01b0319166001600160a01b03909216919091179055565b6040810190611037565b929091016110c7565b6111e5565b604051f35b01359050388061050a565b601f1983169161058686600052602060002090565b92885b8181106105db5750610561989960018661055396600299966105499661055c9c9a61052697106105c1575b505050811b01865561051f565b0135600019600384901b60f8161c191690553880806105b4565b91938a600181928787013581550195019201610589565b6105fa610ac8565b6104c9565b503461000e57602036600319011261000e57602061062361061e61042b565b61126a565b6040519015158152f35b6001600160a01b0381160361000e57565b503461000e57604036600319011261000e5760043561065c8161062d565b6024356001600160401b038116810361000e576106a560ff9160209360018060a01b03166000526101f584526040600020906001600160401b0316600052602052604060002090565b54166040519015158152f35b9060449160841161000e57565b90610104916101441161000e57565b906084916101041161000e57565b503461000e5761014036600319011261000e576106f661042b565b6024356001600160401b039182821161000e573660238301121561000e57816004013592831161000e573660248460051b8401011161000e5761075a9261073c366106b1565b90610746366106cd565b926024610752366106be565b950190610b9c565b005b9060206101a5928181520190610169565b503461000e57602036600319011261000e5761078761042b565b61078f611017565b506107998161126a565b156107cc576001600160401b03166000526101f660205261027f6107c06040600020610d7b565b6040519182918261075c565b60405162461bcd60e51b81526020600482015260186024820152771c995c5d595cdd081a5908191bd95cdb89dd08195e1a5cdd60421b6044820152606490fd5b503461000e57602036600319011261000e5760043561082a8161062d565b610832611397565b6001600160a01b0390811690811561088557600080546001600160a01b031981168417825560405191939192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e576108e836610441565b906108f1611397565b6108f9611397565b6001600160401b0360009181811683526020936101f6855260408420926109208280611037565b918211610abb575b61093c826109368754610cab565b87611069565b8590601f8311600114610a1f576109ee879884610a0c96956109f6956109fd957febf5fc5d525575febff148871346e1458de02c705c900ba0bc9b5361d5eba08a9c92610a14575b50508160011b916000199060031b1c19161788555b8401966109cb6109a8896110bd565b6001830180546001600160a01b0319166001600160a01b03909216919091179055565b6109df600260408701926105538489611037565b6109e8876111e5565b84611037565b9290966110bd565b9280611037565b92909160405196879687611410565b0390a1604051f35b013590503880610984565b601f19831691610a3487600052602060002090565b92885b818110610aa45750986001856109f6956109fd956109ee95610a0c9a997febf5fc5d525575febff148871346e1458de02c705c900ba0bc9b5361d5eba08a9e9f10610a8a575b505050811b018855610999565b0135600019600384901b60f8161c19169055388080610a7d565b91938a600181928787013581550195019201610a37565b610ac3610ac8565b610928565b50634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610afa57604052565b610b02610ac8565b604052565b90601f801991011681019081106001600160401b03821117610afa57604052565b6020906001600160401b038111610b41575b60051b0190565b610b49610ac8565b610b3a565b9291610b5982610b28565b91610b676040519384610b07565b829481845260208094019160051b810192831161000e57905b828210610b8d5750505050565b81358152908301908301610b80565b9093949192946001600160401b0382166000526101f660205260018060a01b036001604060002001541615610c5557610c5295610c4a93610c0c92610bf5856001600160401b03166000526101f6602052604060002090565b50610c0136888a610b4e565b503392878987610ef6565b503360009081526101f5602052604090206102ac90610c3d90836001600160401b0316600052602052604060002090565b805460ff19166001179055565b503691610b4e565b50565b60405162461bcd60e51b815260206004820152602860248201527f76616c696461746f72206973206e6f742073657420666f7220746869732072656044820152671c5d595cdd081a5960c21b6064820152608490fd5b90600182811c92168015610cdb575b6020831014610cc557565b634e487b7160e01b600052602260045260246000fd5b91607f1691610cba565b9060009291805491610cf683610cab565b918282526001938481169081600014610d585750600114610d18575b50505050565b90919394506000526020928360002092846000945b838610610d44575050505001019038808080610d12565b805485870183015294019385908201610d2d565b9294505050602093945060ff191683830152151560051b01019038808080610d12565b90600260408051610d8b81610adf565b610dd481958351610da781610da08185610ce5565b0382610b07565b835260018101546001600160a01b031660208401528351948591610dcd91839101610ce5565b0384610b07565b0152565b60409137565b6101408082528101839052939695949093916001600160fb1b03811161000e5760059793971b80610160958685013782019260408098602085013796600090606084015b60028310610e53575050506101a5959650610e419060e0830190610dd8565b61012083828403019101520190610144565b818082818d60019537019a0192019198610e22565b9060189291635307e79f60e01b8152610e8b825180936020600485019101610121565b01906bffffffffffffffffffffffff199060601b1660048201520190565b3d15610ef1573d906001600160401b038211610ee4575b60405191610ed8601f8201601f191660200184610b07565b82523d6000602084013e565b610eec610ac8565b610ec0565b606090565b6020610f7195610f7d600099610f9795610f4d8c9b998c999a610f38610f33610f8b9a6001600160401b03166000526101f6602052604060002090565b610d7b565b966040880151926040519d8e968b8801610dde565b0390610f61601f19928381018b528a610b07565b604051998a918683019a8b610e68565b03908101895288610b07565b01516001600160a01b031690565b6001600160a01b031690565b9251925af1610fa4610ea9565b8115610fae575090565b805115610fbd57805190602001fd5b60405162461bcd60e51b815260206004820152602c60248201527f4661696c656420746f207665726966792070726f6f6620776974686f7574207260448201526b32bb32b93a103932b0b9b7b760a11b6064820152608490fd5b6040519061102482610adf565b6060604083828152600060208201520152565b903590601e198136030182121561000e57018035906001600160401b03821161000e5760200191813603831361000e57565b90601f811161107757505050565b600091825260208220906020601f850160051c830194106110b3575b601f0160051c01915b8281106110a857505050565b81815560010161109c565b9092508290611093565b356101a58161062d565b9092916001600160401b03811161118f575b6110ed816110e78454610cab565b84611069565b6000601f8211600114611127578192939460009261111c575b50508160011b916000199060031b1c1916179055565b013590503880611106565b601f1982169461113c84600052602060002090565b91805b87811061117757508360019596971061115d575b505050811b019055565b0135600019600384901b60f8161c19169055388080611153565b9092602060018192868601358155019401910161113f565b611197610ac8565b6110d9565b50634e487b7160e01b600052603260045260246000fd5b906101f780548310156111d8575b600052601860206000208360021c019260031b1690565b6111e061119c565b6111c1565b6101f7805461120691600160401b82101561122a575b6001820190556111b3565b819291549060031b916001600160401b039283811b93849216901b16911916179055565b611232610ac8565b6111fb565b50634e487b7160e01b600052601160045260246000fd5b600190600019811461125e570190565b611266611237565b0190565b6101f7549060005b82811061128157505050600090565b61128a816111b3565b90546001600160401b03908185169260031b1c16146112b1576112ac9061124e565b611272565b505050600190565b919082039182116112c657565b6112ce611237565b565b906112da82610b28565b6112e76040519182610b07565b82815280926112f8601f1991610b28565b019060005b82811061130957505050565b602090611314611017565b828285010152016112fd565b6020918151811015611335575b60051b010190565b61133d61119c565b61132d565b1561134957565b60405162461bcd60e51b8152602060048201526019602482015278537461727420696e646578206f7574206f6620626f756e647360381b6044820152606490fd5b919082018092116112c657565b6000546001600160a01b031633036113ab57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b908060209392818452848401376000828201840152601f01601f1916010190565b916101a5969495936001600160401b03611438931684526080602085015260808401916113ef565b6001600160a01b0390941660408201528084036060909101526113ef56fea264697066735822122038ff5b51a216462c639cde4ec27877fbdf516999498c0ff6f53734dd18ba60a664736f6c63430008100033";

export class NexeraZKPVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NexeraZKPVerifier> {
    return super.deploy(overrides || {}) as Promise<NexeraZKPVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NexeraZKPVerifier {
    return super.attach(address) as NexeraZKPVerifier;
  }
  connect(signer: Signer): NexeraZKPVerifier__factory {
    return super.connect(signer) as NexeraZKPVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NexeraZKPVerifierInterface {
    return new utils.Interface(_abi) as NexeraZKPVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NexeraZKPVerifier {
    return new Contract(address, _abi, signerOrProvider) as NexeraZKPVerifier;
  }
}
