/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WhitelistedAccess,
  WhitelistedAccessInterface,
} from "../WhitelistedAccess";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "protectedFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c71380380610c71833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610b5a806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630625b9a01461003b578063b6bd851a1461006b575b600080fd5b6100556004803603810190610050919061067f565b610087565b604051610062919061070c565b60405180910390f35b61008560048036038101906100809190610727565b6100c4565b005b60004630868686866040516020016100a496959493929190610850565b604051602081830303815290604052805190602001209050949350505050565b83838383600061011c338484610117600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020610262565b610087565b9050600061012982610270565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101b987878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050836102a690919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff161461020f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102069061090a565b60405180910390fd5b610256600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206102cd565b50505050505050505050565b600081600001549050919050565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b60008060006102b585856102e3565b915091506102c281610334565b819250505092915050565b6001816000016000828254019250508190555050565b60008060418351036103245760008060006020860151925060408601519150606086015160001a90506103188782858561049a565b9450945050505061032d565b60006002915091505b9250929050565b600060048111156103485761034761092a565b5b81600481111561035b5761035a61092a565b5b031561049757600160048111156103755761037461092a565b5b8160048111156103885761038761092a565b5b036103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906109a5565b60405180910390fd5b600260048111156103dc576103db61092a565b5b8160048111156103ef576103ee61092a565b5b0361042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610a11565b60405180910390fd5b600360048111156104435761044261092a565b5b8160048111156104565761045561092a565b5b03610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610aa3565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156104d5576000600391509150610573565b6000600187878787604051600081526020016040526040516104fa9493929190610adf565b6020604051602081039080840390855afa15801561051c573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361056a57600060019250925050610573565b80600092509250505b94509492505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b182610586565b9050919050565b6105c1816105a6565b81146105cc57600080fd5b50565b6000813590506105de816105b8565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610609576106086105e4565b5b8235905067ffffffffffffffff811115610626576106256105e9565b5b602083019150836001820283011115610642576106416105ee565b5b9250929050565b6000819050919050565b61065c81610649565b811461066757600080fd5b50565b60008135905061067981610653565b92915050565b600080600080606085870312156106995761069861057c565b5b60006106a7878288016105cf565b945050602085013567ffffffffffffffff8111156106c8576106c7610581565b5b6106d4878288016105f3565b935093505060406106e78782880161066a565b91505092959194509250565b6000819050919050565b610706816106f3565b82525050565b600060208201905061072160008301846106fd565b92915050565b600080600080604085870312156107415761074061057c565b5b600085013567ffffffffffffffff81111561075f5761075e610581565b5b61076b878288016105f3565b9450945050602085013567ffffffffffffffff81111561078e5761078d610581565b5b61079a878288016105f3565b925092505092959194509250565b6000819050919050565b6107c36107be82610649565b6107a8565b82525050565b60008160601b9050919050565b60006107e1826107c9565b9050919050565b60006107f3826107d6565b9050919050565b61080b610806826105a6565b6107e8565b82525050565b600081905092915050565b82818337600083830152505050565b60006108378385610811565b935061084483858461081c565b82840190509392505050565b600061085c82896107b2565b60208201915061086c82886107fa565b60148201915061087c82876107fa565b60148201915061088d82858761082b565b915061089982846107b2565b602082019150819050979650505050505050565b600082825260208201905092915050565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b60006108f46011836108ad565b91506108ff826108be565b602082019050919050565b60006020820190508181036000830152610923816108e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b600061098f6018836108ad565b915061099a82610959565b602082019050919050565b600060208201905081810360008301526109be81610982565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b60006109fb601f836108ad565b9150610a06826109c5565b602082019050919050565b60006020820190508181036000830152610a2a816109ee565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000610a8d6022836108ad565b9150610a9882610a31565b604082019050919050565b60006020820190508181036000830152610abc81610a80565b9050919050565b600060ff82169050919050565b610ad981610ac3565b82525050565b6000608082019050610af460008301876106fd565b610b016020830186610ad0565b610b0e60408301856106fd565b610b1b60608301846106fd565b9594505050505056fea264697066735822122025bb7da2bed46efadd2a34da3d01e845f67eaa1e767988c0ee23068cd3afd00a64736f6c63430008100033";

export class WhitelistedAccess__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WhitelistedAccess> {
    return super.deploy(_signer, overrides || {}) as Promise<WhitelistedAccess>;
  }
  getDeployTransaction(
    _signer: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, overrides || {});
  }
  attach(address: string): WhitelistedAccess {
    return super.attach(address) as WhitelistedAccess;
  }
  connect(signer: Signer): WhitelistedAccess__factory {
    return super.connect(signer) as WhitelistedAccess__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitelistedAccessInterface {
    return new utils.Interface(_abi) as WhitelistedAccessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitelistedAccess {
    return new Contract(address, _abi, signerOrProvider) as WhitelistedAccess;
  }
}
