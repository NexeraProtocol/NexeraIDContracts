name: Contract Deployment template

on:
  workflow_call:
    inputs:
      NETWORK:
        required: true
        type: string
        description: "Network"

env:
  AMOY_PROVIDER_URL: ${{ secrets.AMOY_PROVIDER_URL }}
  POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}
  DEPLOYMENT_MNEMONIC: ${{ secrets.DEPLOYMENT_MNEMONIC }}
  SALT: ${{ secrets.SALT }}
  PNPM_VERSION: 8.15.2
  NODE_VERSION: 20.11.0
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.NPM_TOKEN }}
          ref: main

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Build
        run: |
          pnpm run build:contracts
          pnpm --filter @nexeraprotocol/nexera-id-sig-gating-contracts-sdk build

      # Commented for now because we prefer to bump it manually
      #   - name: Update Signer Manager version
      #     run: |
      #       pnpm run version:patch

      - name: Deploy contracts
        run: pnpm deploy-${{ inputs.NETWORK }}

      - name: Update deployed addresses in sdk
        run: |
          pnpm copy-info-to-sdk
          pnpm lint

      - name: Check for changes
        id: changes
        run: |          
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
              echo "New files detected"
              echo "status=new" >> $GITHUB_OUTPUT
          else
              echo "No new files"
              echo "status=old" >> $GITHUB_OUTPUT
          fi

      - name: Create branch
        if: ${{ steps.changes.outputs.status == 'new' }}
        run: git checkout -b contracts/${{ inputs.NETWORK }}-deployment-${{ github.run_number }}

      - name: Initialize mandatory git config
        if: ${{ steps.changes.outputs.status == 'new' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Prepare commit
        if: ${{ steps.changes.outputs.status == 'new' }}
        run: |
          git add .
          git commit -m "Update ${{ inputs.NETWORK }} deployment"

      - name: Push new branch
        if: ${{ steps.changes.outputs.status == 'new' }}
        run: git push origin contracts/${{ inputs.NETWORK }}-deployment-${{ github.run_number }}

      - name: Create pull request into main branch
        if: ${{ steps.changes.outputs.status == 'new' }}
        uses: thomaseizinger/create-pull-request@1.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: contracts/${{ inputs.NETWORK }}-deployment-${{ github.run_number }}
          base: main
          title: contracts/${{ inputs.NETWORK }}-deployment-${{ github.run_number }} into main
          body: |
            Automated pull request: This PR was created in response workflow running.
