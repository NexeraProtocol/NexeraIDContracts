name: Contract Deployment template
on:
  workflow_call:
    inputs:
      NETWORK:
        description: "Network to deploy to"
        required: true
        type: string
    secrets:
      MUMBAI_PROVIDER_URL:
        description: "Polygon Mumbai provider url"
        required: true
      POLYGON_MAINNET_PROVIDER_URL:
        description: "Polygon Mainnet provider url"
        required: true
      DEPLOYMENT_MNEMONIC:
        description: "Deployment Mnemonic"
        required: true
      SALT:
        description: "Salt for deterministic deployments"
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.NEXERA_BOT_ACCESS_TOKEN }}
  MUMBAI_PROVIDER_URL: ${{ secrets.MUMBAI_PROVIDER_URL }}
  POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}
  DEPLOYMENT_MNEMONIC: ${{ secrets.DEPLOYMENT_MNEMONIC }}
  SALT: ${{ secrets.SALT }}
  PNPM_VERSION: 8.15.2
  NODE_VERSION: 20.11.0

jobs:
  Deploy:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v3
        with:
          # Marko pls take a look
          token: "${{ secrets.NEXERA_BOT_ACCESS_TOKEN }}"

      - uses: pnpm/action-setup@v3.0.0
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: |
          pnpm install

      - name: Build
        run: |
          pnpm run build:contracts
          pnpm --filter @nexeraprotocol/nexera-id-sig-gating-contracts-sdk build

      - name: Deploy contracts
        # Marko pls take a look: should this be main?
        if: github.ref == 'refs/heads/development'
        run:
          pnpm deploy-${{ inputs.NETWORK }}

          # Marko pls take a look
      - name: Import bot's GPG key for signing commits
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.NEXERA_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.NEXERA_BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Commit contract deployment
        id: commitPush-dev
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.NEXERA_BOT_ACCESS_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
        if: github.ref == 'refs/heads/development'
        run: |
          git restore .npmrc
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
              echo "New files detected, committing and pushing them"
              git pull
              pnpm copy-info-to-sdk
              pnpm lint
              git add .
              git commit -S -m "Deployment ${{inputs.NETWORK}}"
              git push
          else
              echo "No new files, exiting cleanly"
          fi

      - name: Step To run on failure
        if: steps.commitPush-dev.outcome != 'success'
        run: |
          git reset --soft HEAD~1
          git checkout -b github-action-${{inputs.NETWORK}}-${{ github.sha }}
          git commit -S -m "Deployment ${{inputs.NETWORK}}"
          git push --set-upstream origin github-action-${{inputs.NETWORK}}-${{ github.sha }}
