/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProxyAavePool, ProxyAavePoolInterface } from "../ProxyAavePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nexeraVerifierAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "aavePoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nexeraVerifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "permitV",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "permitR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "permitS",
        type: "bytes32",
      },
    ],
    name: "supplyWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b37380380610b37833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610a20806101176000396000f3fe6080604052600436106100435760003560e01c806302c205f0146101d45780638b2a4df5146101fd578063a654897b14610226578063ee567cd91461025157610052565b366100525761005061027c565b005b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d190610684565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b815260040161013391906106e5565b6020604051808303816000875af1158015610152573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610176919061073d565b6101b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ac906107b6565b60405180910390fd5b6101d273cc6114b983e4ed2737e9bd3961c9924e6216c704610296565b005b3480156101e057600080fd5b506101fb60048036038101906101f691906108e1565b6102bc565b005b34801561020957600080fd5b50610224600480360381019061021f9190610997565b610447565b005b34801561023257600080fd5b5061023b6105cd565b60405161024891906106e5565b60405180910390f35b34801561025d57600080fd5b506102666105f1565b60405161027391906106e5565b60405180910390f35b610284610609565b61029461028f61060b565b610296565b565b3660008037600080366000845af43d6000803e80600081146102b7573d6000f35b3d6000fd5b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033b90610684565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b815260040161039d91906106e5565b6020604051808303816000875af11580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e0919061073d565b61041f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610416906107b6565b60405180910390fd5b61043c73cc6114b983e4ed2737e9bd3961c9924e6216c704610296565b505050505050505050565b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c690610684565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b815260040161052891906106e5565b6020604051808303816000875af1158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b919061073d565b6105aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a1906107b6565b60405180910390fd5b6105c773cc6114b983e4ed2737e9bd3961c9924e6216c704610296565b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73cc6114b983e4ed2737e9bd3961c9924e6216c70481565b565b600073cc6114b983e4ed2737e9bd3961c9924e6216c704905090565b600082825260208201905092915050565b7f496d706c656d656e746174696f6e2061646472657373206e6f74207365740000600082015250565b600061066e601e83610627565b915061067982610638565b602082019050919050565b6000602082019050818103600083015261069d81610661565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106cf826106a4565b9050919050565b6106df816106c4565b82525050565b60006020820190506106fa60008301846106d6565b92915050565b600080fd5b60008115159050919050565b61071a81610705565b811461072557600080fd5b50565b60008151905061073781610711565b92915050565b60006020828403121561075357610752610700565b5b600061076184828501610728565b91505092915050565b7f55736572206973206e6f742077686974656c6973746564000000000000000000600082015250565b60006107a0601783610627565b91506107ab8261076a565b602082019050919050565b600060208201905081810360008301526107cf81610793565b9050919050565b6107df816106c4565b81146107ea57600080fd5b50565b6000813590506107fc816107d6565b92915050565b6000819050919050565b61081581610802565b811461082057600080fd5b50565b6000813590506108328161080c565b92915050565b600061ffff82169050919050565b61084f81610838565b811461085a57600080fd5b50565b60008135905061086c81610846565b92915050565b600060ff82169050919050565b61088881610872565b811461089357600080fd5b50565b6000813590506108a58161087f565b92915050565b6000819050919050565b6108be816108ab565b81146108c957600080fd5b50565b6000813590506108db816108b5565b92915050565b600080600080600080600080610100898b03121561090257610901610700565b5b60006109108b828c016107ed565b98505060206109218b828c01610823565b97505060406109328b828c016107ed565b96505060606109438b828c0161085d565b95505060806109548b828c01610823565b94505060a06109658b828c01610896565b93505060c06109768b828c016108cc565b92505060e06109878b828c016108cc565b9150509295985092959890939650565b6000806000606084860312156109b0576109af610700565b5b60006109be868287016107ed565b93505060206109cf86828701610823565b92505060406109e0868287016107ed565b915050925092509256fea2646970667358221220049f3215e8871e48d1dde00362ac88547c173fb1ebae19e5967c181e900a6c2164736f6c63430008100033";

export class ProxyAavePool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _nexeraVerifierAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAavePool> {
    return super.deploy(
      _nexeraVerifierAddress,
      overrides || {}
    ) as Promise<ProxyAavePool>;
  }
  getDeployTransaction(
    _nexeraVerifierAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nexeraVerifierAddress, overrides || {});
  }
  attach(address: string): ProxyAavePool {
    return super.attach(address) as ProxyAavePool;
  }
  connect(signer: Signer): ProxyAavePool__factory {
    return super.connect(signer) as ProxyAavePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAavePoolInterface {
    return new utils.Interface(_abi) as ProxyAavePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAavePool {
    return new Contract(address, _abi, signerOrProvider) as ProxyAavePool;
  }
}
