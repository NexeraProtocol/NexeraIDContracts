/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ScenarioVerifier,
  ScenarioVerifierInterface,
} from "../ScenarioVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
    ],
    name: "AddressIdConnection",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "RequestRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "requestId",
            type: "uint64",
          },
          {
            internalType: "uint256[]",
            name: "inputs",
            type: "uint256[]",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        indexed: false,
        internalType: "struct IScenarioVerifier.ZKP[]",
        name: "zkps",
        type: "tuple[]",
      },
    ],
    name: "SubmitedAllZKPsForUser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "UserAllowedForRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "UserAllowedForScenario",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "contract ICircuitValidator",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "ZKPRequestSet",
    type: "event",
  },
  {
    inputs: [],
    name: "REQUESTS_RETURN_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "finalizeWhitelistScenario",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "getZKPRequest",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getZKPRequests",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZKPRequestsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowedForScenario",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isRuleIdRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "queryRequestWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredRuleIDs",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "requestIdExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "scenarioWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setNexeraZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "submitZKPResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "requestId",
            type: "uint64",
          },
          {
            internalType: "uint256[]",
            name: "inputs",
            type: "uint256[]",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct IScenarioVerifier.ZKP[]",
        name: "zkps",
        type: "tuple[]",
      },
    ],
    name: "whitelistScenario",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6137be80620001146000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80639d602821116100b8578063c76d08451161007c578063c76d084514610388578063cb0e0d7d146103b8578063d8d23caa146103e8578063e3341a1f14610418578063f2fde38b14610448578063f82ddf0a1461046457610137565b80639d602821146102c05780639f5223e0146102f0578063ab7bcfb71461030c578063b45c0fdf1461033c578063b68967e21461036c57610137565b80636508e1b4116100ff5780636508e1b41461021a5780636d76b36314610238578063715018a61461026857806371941da5146102725780638da5cb5b146102a257610137565b80631905e7b11461013c578063197bf1951461015a5780632a2d0c471461018a578063398cfb76146101ba5780635f9e60d7146101ea575b600080fd5b610144610480565b6040516101519190611bef565b60405180910390f35b610174600480360381019061016f9190611c54565b610486565b6040516101819190611c9c565b60405180910390f35b6101a4600480360381019061019f9190611ce3565b6104a7565b6040516101b19190611d51565b60405180910390f35b6101d460048036038101906101cf9190611d98565b6104db565b6040516101e19190611c9c565b60405180910390f35b61020460048036038101906101ff9190611dc5565b610532565b6040516102119190612062565b60405180910390f35b6102226107f4565b60405161022f9190611bef565b60405180910390f35b610252600480360381019061024d9190612084565b610802565b60405161025f9190611c9c565b60405180910390f35b610270610832565b005b61028c60048036038101906102879190611ce3565b610846565b60405161029991906120d3565b60405180910390f35b6102aa610885565b6040516102b79190611d51565b60405180910390f35b6102da60048036038101906102d59190612153565b6108ae565b6040516102e79190611c9c565b60405180910390f35b61030a600480360381019061030591906121c4565b610a07565b005b61032660048036038101906103219190611c54565b610aa2565b6040516103339190611c9c565b60405180910390f35b61035660048036038101906103519190612220565b610b39565b6040516103639190611c9c565b60405180910390f35b610386600480360381019061038191906122fa565b610b69565b005b6103a2600480360381019061039d9190611c54565b610ebf565b6040516103af91906123ed565b60405180910390f35b6103d260048036038101906103cd9190611d98565b6110c3565b6040516103df9190611bef565b60405180910390f35b61040260048036038101906103fd9190611d98565b6110dc565b60405161040f9190611c9c565b60405180910390f35b610432600480360381019061042d9190611d98565b6110fd565b60405161043f9190611c9c565b60405180910390f35b610462600480360381019061045d9190611d98565b61127d565b005b61047e600480360381019061047991906121c4565b611300565b005b6103e881565b6102286020528060005260406000206000915054906101000a900460ff1681565b61022b6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061022a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b606060008061054b6101f78054905086866103e861138e565b915091506000828261055d919061243e565b67ffffffffffffffff81111561057657610575612472565b5b6040519080825280602002602001820160405280156105af57816020015b61059c611b9f565b8152602001906001900390816105945790505b50905060008390505b828110156107e7576101f660006101f783815481106105da576105d96124a1565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054610641906124ff565b80601f016020809104026020016040519081016040528092919081815260200182805461066d906124ff565b80156106ba5780601f1061068f576101008083540402835291602001916106ba565b820191906000526020600020905b81548152906001019060200180831161069d57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610729906124ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610755906124ff565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b5050505050815250508285836107b8919061243e565b815181106107c9576107c86124a1565b5b602002602001018190525080806107df90612530565b9150506105b8565b5080935050505092915050565b60006101f780549050905090565b6102296020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b61083a611485565b6108446000611503565b565b610227818154811061085757600080fd5b9060005260206000209060049182820401919006600802915054906101000a900467ffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600090505b838390508110156109ba576109ad8484838181106108d7576108d66124a1565b5b90506020028101906108e99190612587565b60000160208101906108fb9190611c54565b85858481811061090e5761090d6124a1565b5b90506020028101906109209190612587565b806020019061092f91906125b0565b878786818110610942576109416124a1565b5b90506020028101906109549190612587565b60400188888781811061096a576109696124a1565b5b905060200281019061097c9190612587565b608001898988818110610992576109916124a1565b5b90506020028101906109a49190612587565b61010001610b69565b80806001019150506108b6565b507fefbe0f7f95f99f3446b18c397ba10fec2af0a6ef272d84266ccb64303fd469ef3384846040516109ee9392919061296c565b60405180910390a16109ff336110fd565b905092915050565b610a0f611485565b806101f660008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208181610a449190612f71565b9050506101f78290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080600090505b6101f780549050811015610b2e578267ffffffffffffffff166101f78281548110610ad857610ad76124a1565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1603610b1b576001915050610b34565b8080610b2690612530565b915050610aaa565b50600090505b919050565b6101f56020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff166101f660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a90613002565b60405180910390fd5b610cba86868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506101f660008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166115c7565b6101f660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635307e79f86868686866101f660008e67ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206002016040518763ffffffff1660e01b8152600401610d729695949392919061319e565b60006040518083038186803b158015610d8a57600080fd5b505afa158015610d9e573d6000803e3d6000fd5b5050505060016101f560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610eb786868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506101f660008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166116e0565b505050505050565b610ec7611b9f565b610ed082610aa2565b610f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f069061324f565b60405180910390fd5b6101f660008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054610f52906124ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7e906124ff565b8015610fcb5780601f10610fa057610100808354040283529160200191610fcb565b820191906000526020600020905b815481529060010190602001808311610fae57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461103a906124ff565b80601f0160208091040260200160405190810160405280929190818152602001828054611066906124ff565b80156110b35780601f10611088576101008083540402835291602001916110b3565b820191906000526020600020905b81548152906001019060200180831161109657829003601f168201915b5050505050815250509050919050565b61022c6020528060005260406000206000915090505481565b61022a6020528060005260406000206000915054906101000a900460ff1681565b6000806001905060005b610227805490508110156111e4578180156111cf575061022960006102278381548110611137576111366124a1565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b915081156111e4578080600101915050611107565b508061022a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f14e9c7a267790ab46f2189d66cb068dbf65a27e7f844cb8aded907134d3646748360405161126c9190611d51565b60405180910390a180915050919050565b611285611485565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112eb906132e1565b60405180910390fd5b6112fd81611503565b50565b611308611485565b6113128282610a07565b7febf5fc5d525575febff148871346e1458de02c705c900ba0bc9b5361d5eba08a828280604001906113449190612d61565b8460200160208101906113579190613316565b858060000190611367919061299e565b604051611379969594939291906133bb565b60405180910390a161138a826118b1565b5050565b600080600084116113d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113cb9061345e565b60405180910390fd5b82841115611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140e906134ca565b60405180910390fd5b858510611459576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145090613536565b60405180910390fd5b600084866114679190613556565b905086811115611475578690505b8581925092505094509492505050565b61148d6119be565b73ffffffffffffffffffffffffffffffffffffffff166114ab610885565b73ffffffffffffffffffffffffffffffffffffffff1614611501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f8906135d6565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611663838373ffffffffffffffffffffffffffffffffffffffff1663b16a394f6040518163ffffffff1660e01b815260040161160490613642565b602060405180830381865afa158015611621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116459190613677565b81518110611656576116556124a1565b5b60200260200101516119c6565b90508073ffffffffffffffffffffffffffffffffffffffff166116846119be565b73ffffffffffffffffffffffffffffffffffffffff16146116da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d190613716565b60405180910390fd5b50505050565b6000826001815181106116f6576116f56124a1565b5b602002602001015190508061022c600061170e6119be565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117546119be565b61022b600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f646b8bd6cf28645be11999db4a2cdbe4fdd61ea8f95a3877ffc1258f903be3c26117cf6119be565b826040516117de929190613736565b60405180910390a1600161022960008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600061181a6119be565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f681ea469fc50f02bc3788c40f25e78e5eaa619484685a28003af83fb0dc8dd676118946119be565b856040516118a392919061375f565b60405180910390a150505050565b61022860008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166119bb576102278190806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600161022860008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f56b7ddf97528e633ab570995fc0cf2e93f6eb557b29e5d715965018a34f4295e816040516119b291906120d3565b60405180910390a15b50565b600033905090565b60006119e16119dc6119d7846119e8565b611b34565b611b91565b9050919050565b600081905060087eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff8216901b60087fff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff008316901c17905060107dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff8216901b60107fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff00008316901c17905060207bffffffff00000000ffffffff00000000ffffffff00000000ffffffff8216901b60207fffffffff00000000ffffffff00000000ffffffff00000000ffffffff000000008316901c179050604077ffffffffffffffff0000000000000000ffffffffffffffff8216901b60407fffffffffffffffff0000000000000000ffffffffffffffff00000000000000008316901c179050608081901b608082901c179050919050565b6060602067ffffffffffffffff811115611b5157611b50612472565b5b6040519080825280601f01601f191660200182016040528015611b835781602001600182028036833780820191505090505b509050816020820152919050565b600060148201519050919050565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000819050919050565b611be981611bd6565b82525050565b6000602082019050611c046000830184611be0565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b611c3181611c14565b8114611c3c57600080fd5b50565b600081359050611c4e81611c28565b92915050565b600060208284031215611c6a57611c69611c0a565b5b6000611c7884828501611c3f565b91505092915050565b60008115159050919050565b611c9681611c81565b82525050565b6000602082019050611cb16000830184611c8d565b92915050565b611cc081611bd6565b8114611ccb57600080fd5b50565b600081359050611cdd81611cb7565b92915050565b600060208284031215611cf957611cf8611c0a565b5b6000611d0784828501611cce565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d3b82611d10565b9050919050565b611d4b81611d30565b82525050565b6000602082019050611d666000830184611d42565b92915050565b611d7581611d30565b8114611d8057600080fd5b50565b600081359050611d9281611d6c565b92915050565b600060208284031215611dae57611dad611c0a565b5b6000611dbc84828501611d83565b91505092915050565b60008060408385031215611ddc57611ddb611c0a565b5b6000611dea85828601611cce565b9250506020611dfb85828601611cce565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611e6b578082015181840152602081019050611e50565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e9382611e31565b611e9d8185611e3c565b9350611ead818560208601611e4d565b611eb681611e77565b840191505092915050565b6000819050919050565b6000611ee6611ee1611edc84611d10565b611ec1565b611d10565b9050919050565b6000611ef882611ecb565b9050919050565b6000611f0a82611eed565b9050919050565b611f1a81611eff565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611f4782611f20565b611f518185611f2b565b9350611f61818560208601611e4d565b611f6a81611e77565b840191505092915050565b60006060830160008301518482036000860152611f928282611e88565b9150506020830151611fa76020860182611f11565b5060408301518482036040860152611fbf8282611f3c565b9150508091505092915050565b6000611fd88383611f75565b905092915050565b6000602082019050919050565b6000611ff882611e05565b6120028185611e10565b93508360208202850161201485611e21565b8060005b8581101561205057848403895281516120318582611fcc565b945061203c83611fe0565b925060208a01995050600181019050612018565b50829750879550505050505092915050565b6000602082019050818103600083015261207c8184611fed565b905092915050565b6000806040838503121561209b5761209a611c0a565b5b60006120a985828601611c3f565b92505060206120ba85828601611d83565b9150509250929050565b6120cd81611c14565b82525050565b60006020820190506120e860008301846120c4565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612113576121126120ee565b5b8235905067ffffffffffffffff8111156121305761212f6120f3565b5b60208301915083602082028301111561214c5761214b6120f8565b5b9250929050565b6000806020838503121561216a57612169611c0a565b5b600083013567ffffffffffffffff81111561218857612187611c0f565b5b612194858286016120fd565b92509250509250929050565b600080fd5b6000606082840312156121bb576121ba6121a0565b5b81905092915050565b600080604083850312156121db576121da611c0a565b5b60006121e985828601611c3f565b925050602083013567ffffffffffffffff81111561220a57612209611c0f565b5b612216858286016121a5565b9150509250929050565b6000806040838503121561223757612236611c0a565b5b600061224585828601611d83565b925050602061225685828601611c3f565b9150509250929050565b60008083601f840112612276576122756120ee565b5b8235905067ffffffffffffffff811115612293576122926120f3565b5b6020830191508360208202830111156122af576122ae6120f8565b5b9250929050565b6000819050826020600202820111156122d2576122d16120f8565b5b92915050565b6000819050826040600202820111156122f4576122f36120f8565b5b92915050565b600080600080600080610140878903121561231857612317611c0a565b5b600061232689828a01611c3f565b965050602087013567ffffffffffffffff81111561234757612346611c0f565b5b61235389828a01612260565b9550955050604061236689828a016122b6565b935050608061237789828a016122d8565b92505061010061238989828a016122b6565b9150509295509295509295565b600060608301600083015184820360008601526123b38282611e88565b91505060208301516123c86020860182611f11565b50604083015184820360408601526123e08282611f3c565b9150508091505092915050565b600060208201905081810360008301526124078184612396565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061244982611bd6565b915061245483611bd6565b925082820390508181111561246c5761246b61240f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061251757607f821691505b60208210810361252a576125296124d0565b5b50919050565b600061253b82611bd6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361256d5761256c61240f565b5b600182019050919050565b600080fd5b600080fd5b600080fd5b600082356001610140038336030381126125a4576125a3612578565b5b80830191505092915050565b600080833560016020038436030381126125cd576125cc612578565b5b80840192508235915067ffffffffffffffff8211156125ef576125ee61257d565b5b60208301925060208202360383131561260b5761260a612582565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b600061263d6020840184611c3f565b905092915050565b61264e81611c14565b82525050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126126805761267f61265e565b5b83810192508235915060208301925067ffffffffffffffff8211156126a8576126a7612654565b5b6020820236038313156126be576126bd612659565b5b509250929050565b600082825260208201905092915050565b600080fd5b82818337505050565b60006126f183856126c6565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612724576127236126d7565b5b6020830292506127358385846126dc565b82840190509392505050565b600082905092915050565b612758604083836126dc565b5050565b600082905092915050565b600060029050919050565b600081905092915050565b6000819050919050565b6000612793838361274c565b60408301905092915050565b6000604082019050919050565b6127b581612767565b6127bf8184612772565b92506127ca8261277d565b8060005b83811015612803576127e08284612741565b6127ea8782612787565b96506127f58361279f565b9250506001810190506127ce565b505050505050565b6000610140830161281f600084018461262e565b61282c6000860182612645565b5061283a6020840184612663565b858303602087015261284d8382846126e5565b9250505061285e6040840184612741565b61286b604086018261274c565b50612879608084018461275c565b61288660808601826127ac565b50612895610100840184612741565b6128a361010086018261274c565b508091505092915050565b60006128ba838361280b565b905092915050565b600082356001610140038336030381126128df576128de61265e565b5b82810191505092915050565b6000602082019050919050565b60006129048385612613565b93508360208402850161291684612624565b8060005b8781101561295a57848403895261293182846128c2565b61293b85826128ae565b9450612946836128eb565b925060208a0199505060018101905061291a565b50829750879450505050509392505050565b60006040820190506129816000830186611d42565b81810360208301526129948184866128f8565b9050949350505050565b600080833560016020038436030381126129bb576129ba612578565b5b80840192508235915067ffffffffffffffff8211156129dd576129dc61257d565b5b6020830192506001820236038313156129f9576129f8612582565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612a6e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a31565b612a788683612a31565b95508019841693508086168417925050509392505050565b6000612aab612aa6612aa184611bd6565b611ec1565b611bd6565b9050919050565b6000819050919050565b612ac583612a90565b612ad9612ad182612ab2565b848454612a3e565b825550505050565b600090565b612aee612ae1565b612af9818484612abc565b505050565b5b81811015612b1d57612b12600082612ae6565b600181019050612aff565b5050565b601f821115612b6257612b3381612a0c565b612b3c84612a21565b81016020851015612b4b578190505b612b5f612b5785612a21565b830182612afe565b50505b505050565b600082821c905092915050565b6000612b8560001984600802612b67565b1980831691505092915050565b6000612b9e8383612b74565b9150826002028217905092915050565b612bb88383612a01565b67ffffffffffffffff811115612bd157612bd0612472565b5b612bdb82546124ff565b612be6828285612b21565b6000601f831160018114612c155760008415612c03578287013590505b612c0d8582612b92565b865550612c75565b601f198416612c2386612a0c565b60005b82811015612c4b57848901358255600182019150602085019450602081019050612c26565b86831015612c685784890135612c64601f891682612b74565b8355505b6001600288020188555050505b50505050505050565b612c89838383612bae565b505050565b6000612c9982611d30565b9050919050565b612ca981612c8e565b8114612cb457600080fd5b50565b60008135612cc481612ca0565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff612cfa84612ccd565b9350801983169250808416831791505092915050565b6000612d1b82611ecb565b9050919050565b6000612d2d82612d10565b9050919050565b6000819050919050565b612d4782612d22565b612d5a612d5382612d34565b8354612cda565b8255505050565b60008083356001602003843603038112612d7e57612d7d612578565b5b80840192508235915067ffffffffffffffff821115612da057612d9f61257d565b5b602083019250600182023603831315612dbc57612dbb612582565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b601f821115612e2557612df681612dcf565b612dff84612a21565b81016020851015612e0e578190505b612e22612e1a85612a21565b830182612afe565b50505b505050565b612e348383612dc4565b67ffffffffffffffff811115612e4d57612e4c612472565b5b612e5782546124ff565b612e62828285612de4565b6000601f831160018114612e915760008415612e7f578287013590505b612e898582612b92565b865550612ef1565b601f198416612e9f86612dcf565b60005b82811015612ec757848901358255600182019150602085019450602081019050612ea2565b86831015612ee45784890135612ee0601f891682612b74565b8355505b6001600288020188555050505b50505050505050565b612f05838383612e2a565b505050565b6000810160008301612f1c818561299e565b612f27818386612c7e565b50505050600181016020830180612f3d81612cb7565b9050612f498184612d3e565b5050506002810160408301612f5e8185612d61565b612f69818386612efa565b505050505050565b612f7b8282612f0a565b5050565b600082825260208201905092915050565b7f76616c696461746f72206973206e6f742073657420666f72207468697320726560008201527f7175657374206964000000000000000000000000000000000000000000000000602082015250565b6000612fec602883612f7f565b9150612ff782612f90565b604082019050919050565b6000602082019050818103600083015261301b81612fdf565b9050919050565b600082825260208201905092915050565b600061303f8385613022565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613072576130716126d7565b5b6020830292506130838385846126dc565b82840190509392505050565b61309b604083836126dc565b5050565b600081905092915050565b6130b381612767565b6130bd818461309f565b92506130c88261277d565b8060005b83811015613101576130de8284612741565b6130e88782612787565b96506130f38361279f565b9250506001810190506130cc565b505050505050565b600082825260208201905092915050565b60008154613127816124ff565b6131318186613109565b9450600182166000811461314c576001811461316257613195565b60ff198316865281151560200286019350613195565b61316b85612dcf565b60005b8381101561318d5781548189015260018201915060208101905061316e565b808801955050505b50505092915050565b60006101408201905081810360008301526131ba81888a613033565b90506131c9602083018761308f565b6131d660608301866130aa565b6131e360e083018561308f565b8181036101208301526131f6818461311a565b9050979650505050505050565b7f7265717565737420696420646f65736e27742065786973740000000000000000600082015250565b6000613239601883612f7f565b915061324482613203565b602082019050919050565b600060208201905081810360008301526132688161322c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006132cb602683612f7f565b91506132d68261326f565b604082019050919050565b600060208201905081810360008301526132fa816132be565b9050919050565b60008135905061331081612ca0565b92915050565b60006020828403121561332c5761332b611c0a565b5b600061333a84828501613301565b91505092915050565b82818337600083830152505050565b600061335e8385613109565b935061336b838584613343565b61337483611e77565b840190509392505050565b61338881611eff565b82525050565b600061339a8385612f7f565b93506133a7838584613343565b6133b083611e77565b840190509392505050565b60006080820190506133d060008301896120c4565b81810360208301526133e3818789613352565b90506133f2604083018661337f565b818103606083015261340581848661338e565b9050979650505050505050565b7f4c656e6774682073686f756c642062652067726561746572207468616e203000600082015250565b6000613448601f83612f7f565b915061345382613412565b602082019050919050565b600060208201905081810360008301526134778161343b565b9050919050565b7f4c656e677468206c696d69742065786365656465640000000000000000000000600082015250565b60006134b4601583612f7f565b91506134bf8261347e565b602082019050919050565b600060208201905081810360008301526134e3816134a7565b9050919050565b7f537461727420696e646578206f7574206f6620626f756e647300000000000000600082015250565b6000613520601983612f7f565b915061352b826134ea565b602082019050919050565b6000602082019050818103600083015261354f81613513565b9050919050565b600061356182611bd6565b915061356c83611bd6565b92508282019050808211156135845761358361240f565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006135c0602083612f7f565b91506135cb8261358a565b602082019050919050565b600060208201905081810360008301526135ef816135b3565b9050919050565b7f6368616c6c656e67650000000000000000000000000000000000000000000000600082015250565b600061362c600983612f7f565b9150613637826135f6565b602082019050919050565b6000602082019050818103600083015261365b8161361f565b9050919050565b60008151905061367181611cb7565b92915050565b60006020828403121561368d5761368c611c0a565b5b600061369b84828501613662565b91505092915050565b7f6164647265737320696e2070726f6f66206973206e6f7420612073656e64657260008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b6000613700602883612f7f565b915061370b826136a4565b604082019050919050565b6000602082019050818103600083015261372f816136f3565b9050919050565b600060408201905061374b6000830185611d42565b6137586020830184611be0565b9392505050565b60006040820190506137746000830185611d42565b61378160208301846120c4565b939250505056fea26469706673582212204f7ad1d8b055a167a42088809188f6fc392c70d1ae4a7dde3d94ae74e0765ec064736f6c63430008100033";

export class ScenarioVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ScenarioVerifier> {
    return super.deploy(overrides || {}) as Promise<ScenarioVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ScenarioVerifier {
    return super.attach(address) as ScenarioVerifier;
  }
  connect(signer: Signer): ScenarioVerifier__factory {
    return super.connect(signer) as ScenarioVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScenarioVerifierInterface {
    return new utils.Interface(_abi) as ScenarioVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScenarioVerifier {
    return new Contract(address, _abi, signerOrProvider) as ScenarioVerifier;
  }
}
