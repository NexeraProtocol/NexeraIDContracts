/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NexeraZKPVerifier,
  NexeraZKPVerifierInterface,
} from "../NexeraZKPVerifier";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "contract ICircuitValidator",
        name: "validator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "ZKPRequestSet",
    type: "event",
  },
  {
    inputs: [],
    name: "REQUESTS_RETURN_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "getZKPRequest",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "getZKPRequests",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getZKPRequestsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "requestIdExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setNexeraZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "contract ICircuitValidator",
            name: "validator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IZKPVerifier.ZKPRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "setZKPRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "submitZKPResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61252980620001146000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063ab7bcfb711610071578063ab7bcfb714610169578063b45c0fdf14610199578063b68967e2146101c9578063c76d0845146101e5578063f2fde38b14610215578063f82ddf0a14610231576100b4565b80631905e7b1146100b95780635f9e60d7146100d75780636508e1b414610107578063715018a6146101255780638da5cb5b1461012f5780639f5223e01461014d575b600080fd5b6100c161024d565b6040516100ce9190610fcb565b60405180910390f35b6100f160048036038101906100ec919061101c565b610253565b6040516100fe91906112d9565b60405180910390f35b61010f610515565b60405161011c9190610fcb565b60405180910390f35b61012d610523565b005b610137610537565b604051610144919061131c565b60405180910390f35b6101676004803603810190610162919061139b565b610560565b005b610183600480360381019061017e91906113f7565b6105fb565b604051610190919061143f565b60405180910390f35b6101b360048036038101906101ae9190611486565b610692565b6040516101c0919061143f565b60405180910390f35b6101e360048036038101906101de919061156f565b6106c2565b005b6101ff60048036038101906101fa91906113f7565b610a18565b60405161020c9190611662565b60405180910390f35b61022f600480360381019061022a9190611684565b610c1c565b005b61024b6004803603810190610246919061139b565b610c9f565b005b6103e881565b606060008061026c6101f78054905086866103e8610d2d565b915091506000828261027e91906116e0565b67ffffffffffffffff81111561029757610296611714565b5b6040519080825280602002602001820160405280156102d057816020015b6102bd610f7b565b8152602001906001900390816102b55790505b50905060008390505b82811015610508576101f660006101f783815481106102fb576102fa611743565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054610362906117a1565b80601f016020809104026020016040519081016040528092919081815260200182805461038e906117a1565b80156103db5780601f106103b0576101008083540402835291602001916103db565b820191906000526020600020905b8154815290600101906020018083116103be57829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461044a906117a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610476906117a1565b80156104c35780601f10610498576101008083540402835291602001916104c3565b820191906000526020600020905b8154815290600101906020018083116104a657829003601f168201915b5050505050815250508285836104d991906116e0565b815181106104ea576104e9611743565b5b60200260200101819052508080610500906117d2565b9150506102d9565b5080935050505092915050565b60006101f780549050905090565b61052b610e24565b6105356000610ea2565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610568610e24565b806101f660008467ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020818161059d9190611dfc565b9050506101f78290806001815401808255809150506001900390600052602060002090600491828204019190066008029091909190916101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b600080600090505b6101f780549050811015610687578267ffffffffffffffff166101f7828154811061063157610630611743565b5b90600052602060002090600491828204019190066008029054906101000a900467ffffffffffffffff1667ffffffffffffffff160361067457600191505061068d565b808061067f906117d2565b915050610603565b50600090505b919050565b6101f56020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff166101f660008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361077c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077390611e8d565b60405180910390fd5b61081386868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506101f660008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f66565b6101f660008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635307e79f86868686866101f660008e67ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206002016040518763ffffffff1660e01b81526004016108cb9695949392919061208c565b60006040518083038186803b1580156108e357600080fd5b505afa1580156108f7573d6000803e3d6000fd5b5050505060016101f560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610a1086868680806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050506101f660008a67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f6b565b505050505050565b610a20610f7b565b610a29826105fb565b610a68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5f9061213d565b60405180910390fd5b6101f660008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054610aab906117a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad7906117a1565b8015610b245780601f10610af957610100808354040283529160200191610b24565b820191906000526020600020905b815481529060010190602001808311610b0757829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610b93906117a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbf906117a1565b8015610c0c5780601f10610be157610100808354040283529160200191610c0c565b820191906000526020600020905b815481529060010190602001808311610bef57829003601f168201915b5050505050815250509050919050565b610c24610e24565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a906121cf565b60405180910390fd5b610c9c81610ea2565b50565b610ca7610e24565b610cb18282610560565b7febf5fc5d525575febff148871346e1458de02c705c900ba0bc9b5361d5eba08a82828060400190610ce39190611bec565b846020016020810190610cf69190612204565b858060000190610d069190611829565b604051610d18969594939291906122b8565b60405180910390a1610d2982610f70565b5050565b60008060008411610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a9061235b565b60405180910390fd5b82841115610db6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dad906123c7565b60405180910390fd5b858510610df8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610def90612433565b60405180910390fd5b60008486610e069190612453565b905086811115610e14578690505b8581925092505094509492505050565b610e2c610f73565b73ffffffffffffffffffffffffffffffffffffffff16610e4a610537565b73ffffffffffffffffffffffffffffffffffffffff1614610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906124d3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b50565b600033905090565b604051806060016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000819050919050565b610fc581610fb2565b82525050565b6000602082019050610fe06000830184610fbc565b92915050565b600080fd5b600080fd5b610ff981610fb2565b811461100457600080fd5b50565b60008135905061101681610ff0565b92915050565b6000806040838503121561103357611032610fe6565b5b600061104185828601611007565b925050602061105285828601611007565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110c25780820151818401526020810190506110a7565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ea82611088565b6110f48185611093565b93506111048185602086016110a4565b61110d816110ce565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061115d61115861115384611118565b611138565b611118565b9050919050565b600061116f82611142565b9050919050565b600061118182611164565b9050919050565b61119181611176565b82525050565b600081519050919050565b600082825260208201905092915050565b60006111be82611197565b6111c881856111a2565b93506111d88185602086016110a4565b6111e1816110ce565b840191505092915050565b6000606083016000830151848203600086015261120982826110df565b915050602083015161121e6020860182611188565b506040830151848203604086015261123682826111b3565b9150508091505092915050565b600061124f83836111ec565b905092915050565b6000602082019050919050565b600061126f8261105c565b6112798185611067565b93508360208202850161128b85611078565b8060005b858110156112c757848403895281516112a88582611243565b94506112b383611257565b925060208a0199505060018101905061128f565b50829750879550505050505092915050565b600060208201905081810360008301526112f38184611264565b905092915050565b600061130682611118565b9050919050565b611316816112fb565b82525050565b6000602082019050611331600083018461130d565b92915050565b600067ffffffffffffffff82169050919050565b61135481611337565b811461135f57600080fd5b50565b6000813590506113718161134b565b92915050565b600080fd5b60006060828403121561139257611391611377565b5b81905092915050565b600080604083850312156113b2576113b1610fe6565b5b60006113c085828601611362565b925050602083013567ffffffffffffffff8111156113e1576113e0610feb565b5b6113ed8582860161137c565b9150509250929050565b60006020828403121561140d5761140c610fe6565b5b600061141b84828501611362565b91505092915050565b60008115159050919050565b61143981611424565b82525050565b60006020820190506114546000830184611430565b92915050565b611463816112fb565b811461146e57600080fd5b50565b6000813590506114808161145a565b92915050565b6000806040838503121561149d5761149c610fe6565b5b60006114ab85828601611471565b92505060206114bc85828601611362565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114eb576114ea6114c6565b5b8235905067ffffffffffffffff811115611508576115076114cb565b5b602083019150836020820283011115611524576115236114d0565b5b9250929050565b600081905082602060020282011115611547576115466114d0565b5b92915050565b600081905082604060020282011115611569576115686114d0565b5b92915050565b600080600080600080610140878903121561158d5761158c610fe6565b5b600061159b89828a01611362565b965050602087013567ffffffffffffffff8111156115bc576115bb610feb565b5b6115c889828a016114d5565b955095505060406115db89828a0161152b565b93505060806115ec89828a0161154d565b9250506101006115fe89828a0161152b565b9150509295509295509295565b6000606083016000830151848203600086015261162882826110df565b915050602083015161163d6020860182611188565b506040830151848203604086015261165582826111b3565b9150508091505092915050565b6000602082019050818103600083015261167c818461160b565b905092915050565b60006020828403121561169a57611699610fe6565b5b60006116a884828501611471565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116eb82610fb2565b91506116f683610fb2565b925082820390508181111561170e5761170d6116b1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117b957607f821691505b6020821081036117cc576117cb611772565b5b50919050565b60006117dd82610fb2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361180f5761180e6116b1565b5b600182019050919050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126118465761184561181a565b5b80840192508235915067ffffffffffffffff8211156118685761186761181f565b5b60208301925060018202360383131561188457611883611824565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826118bc565b61190386836118bc565b95508019841693508086168417925050509392505050565b600061193661193161192c84610fb2565b611138565b610fb2565b9050919050565b6000819050919050565b6119508361191b565b61196461195c8261193d565b8484546118c9565b825550505050565b600090565b61197961196c565b611984818484611947565b505050565b5b818110156119a85761199d600082611971565b60018101905061198a565b5050565b601f8211156119ed576119be81611897565b6119c7846118ac565b810160208510156119d6578190505b6119ea6119e2856118ac565b830182611989565b50505b505050565b600082821c905092915050565b6000611a10600019846008026119f2565b1980831691505092915050565b6000611a2983836119ff565b9150826002028217905092915050565b611a43838361188c565b67ffffffffffffffff811115611a5c57611a5b611714565b5b611a6682546117a1565b611a718282856119ac565b6000601f831160018114611aa05760008415611a8e578287013590505b611a988582611a1d565b865550611b00565b601f198416611aae86611897565b60005b82811015611ad657848901358255600182019150602085019450602081019050611ab1565b86831015611af35784890135611aef601f8916826119ff565b8355505b6001600288020188555050505b50505050505050565b611b14838383611a39565b505050565b6000611b24826112fb565b9050919050565b611b3481611b19565b8114611b3f57600080fd5b50565b60008135611b4f81611b2b565b80915050919050565b60008160001b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff611b8584611b58565b9350801983169250808416831791505092915050565b6000611ba682611142565b9050919050565b6000611bb882611b9b565b9050919050565b6000819050919050565b611bd282611bad565b611be5611bde82611bbf565b8354611b65565b8255505050565b60008083356001602003843603038112611c0957611c0861181a565b5b80840192508235915067ffffffffffffffff821115611c2b57611c2a61181f565b5b602083019250600182023603831315611c4757611c46611824565b5b509250929050565b600082905092915050565b60008190508160005260206000209050919050565b601f821115611cb057611c8181611c5a565b611c8a846118ac565b81016020851015611c99578190505b611cad611ca5856118ac565b830182611989565b50505b505050565b611cbf8383611c4f565b67ffffffffffffffff811115611cd857611cd7611714565b5b611ce282546117a1565b611ced828285611c6f565b6000601f831160018114611d1c5760008415611d0a578287013590505b611d148582611a1d565b865550611d7c565b601f198416611d2a86611c5a565b60005b82811015611d5257848901358255600182019150602085019450602081019050611d2d565b86831015611d6f5784890135611d6b601f8916826119ff565b8355505b6001600288020188555050505b50505050505050565b611d90838383611cb5565b505050565b6000810160008301611da78185611829565b611db2818386611b09565b50505050600181016020830180611dc881611b42565b9050611dd48184611bc9565b5050506002810160408301611de98185611bec565b611df4818386611d85565b505050505050565b611e068282611d95565b5050565b600082825260208201905092915050565b7f76616c696461746f72206973206e6f742073657420666f72207468697320726560008201527f7175657374206964000000000000000000000000000000000000000000000000602082015250565b6000611e77602883611e0a565b9150611e8282611e1b565b604082019050919050565b60006020820190508181036000830152611ea681611e6a565b9050919050565b600082825260208201905092915050565b600080fd5b82818337505050565b6000611ed88385611ead565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611f0b57611f0a611ebe565b5b602083029250611f1c838584611ec3565b82840190509392505050565b611f3460408383611ec3565b5050565b600060029050919050565b600081905092915050565b6000819050919050565b611f6460408383611ec3565b5050565b6000611f748383611f58565b60408301905092915050565b600082905092915050565b6000604082019050919050565b611fa181611f38565b611fab8184611f43565b9250611fb682611f4e565b8060005b83811015611fef57611fcc8284611f80565b611fd68782611f68565b9650611fe183611f8b565b925050600181019050611fba565b505050505050565b600082825260208201905092915050565b60008154612015816117a1565b61201f8186611ff7565b9450600182166000811461203a576001811461205057612083565b60ff198316865281151560200286019350612083565b61205985611c5a565b60005b8381101561207b5781548189015260018201915060208101905061205c565b808801955050505b50505092915050565b60006101408201905081810360008301526120a881888a611ecc565b90506120b76020830187611f28565b6120c46060830186611f98565b6120d160e0830185611f28565b8181036101208301526120e48184612008565b9050979650505050505050565b7f7265717565737420696420646f65736e27742065786973740000000000000000600082015250565b6000612127601883611e0a565b9150612132826120f1565b602082019050919050565b600060208201905081810360008301526121568161211a565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006121b9602683611e0a565b91506121c48261215d565b604082019050919050565b600060208201905081810360008301526121e8816121ac565b9050919050565b6000813590506121fe81611b2b565b92915050565b60006020828403121561221a57612219610fe6565b5b6000612228848285016121ef565b91505092915050565b61223a81611337565b82525050565b82818337600083830152505050565b600061225b8385611ff7565b9350612268838584612240565b612271836110ce565b840190509392505050565b61228581611176565b82525050565b60006122978385611e0a565b93506122a4838584612240565b6122ad836110ce565b840190509392505050565b60006080820190506122cd6000830189612231565b81810360208301526122e081878961224f565b90506122ef604083018661227c565b818103606083015261230281848661228b565b9050979650505050505050565b7f4c656e6774682073686f756c642062652067726561746572207468616e203000600082015250565b6000612345601f83611e0a565b91506123508261230f565b602082019050919050565b6000602082019050818103600083015261237481612338565b9050919050565b7f4c656e677468206c696d69742065786365656465640000000000000000000000600082015250565b60006123b1601583611e0a565b91506123bc8261237b565b602082019050919050565b600060208201905081810360008301526123e0816123a4565b9050919050565b7f537461727420696e646578206f7574206f6620626f756e647300000000000000600082015250565b600061241d601983611e0a565b9150612428826123e7565b602082019050919050565b6000602082019050818103600083015261244c81612410565b9050919050565b600061245e82610fb2565b915061246983610fb2565b9250828201905080821115612481576124806116b1565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006124bd602083611e0a565b91506124c882612487565b602082019050919050565b600060208201905081810360008301526124ec816124b0565b905091905056fea2646970667358221220214c8bf28aba30baa512646fcb12b2b872d04459233b175aa0c2e31126ff01fe64736f6c63430008100033";

export class NexeraZKPVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NexeraZKPVerifier> {
    return super.deploy(overrides || {}) as Promise<NexeraZKPVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NexeraZKPVerifier {
    return super.attach(address) as NexeraZKPVerifier;
  }
  connect(signer: Signer): NexeraZKPVerifier__factory {
    return super.connect(signer) as NexeraZKPVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NexeraZKPVerifierInterface {
    return new utils.Interface(_abi) as NexeraZKPVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NexeraZKPVerifier {
    return new Contract(address, _abi, signerOrProvider) as NexeraZKPVerifier;
  }
}
