/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProxyAavePoolIsEntryPoint,
  ProxyAavePoolIsEntryPointInterface,
} from "../ProxyAavePoolIsEntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "ScenarioVerifierAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "ScenarioVerifierDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "ScenarioVerifierDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "ScenarioVerifierEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldScenarioVerifierAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newScenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "ScenarioVerifierUpdated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "aavePoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "addScenarioVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "deleteScenarioVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "disableScenario",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "scenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "enableScenario",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getScenarioVerifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowedForEntrypoint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isScenarioEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "scenarioVerifierAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "permitV",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "permitR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "permitS",
        type: "bytes32",
      },
    ],
    name: "supplyWithPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldScenarioVerifierAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "newScenarioVerifierAddress",
        type: "address",
      },
    ],
    name: "updateScenarioVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f4338038062001f438339818101604052810190620000379190620003d8565b620000576200004b6200006f60201b60201c565b6200007760201b60201c565b62000068816200013b60201b60201c565b5062000553565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200014b620002b460201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001b49062000491565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9cb35b4d87a29c981b43fe2b083241b12e94b901ee8278d73d81ce7dc3180ac781604051620002a99190620004c4565b60405180910390a150565b620002c46200006f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002ea6200034560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000343576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200033a9062000531565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003a08262000373565b9050919050565b620003b28162000393565b8114620003be57600080fd5b50565b600081519050620003d281620003a7565b92915050565b600060208284031215620003f157620003f06200036e565b5b60006200040184828501620003c1565b91505092915050565b600082825260208201905092915050565b7f496e707574205363656e6172696f20616464726573732063616e6e6f7420626560008201527f20746865207a65726f2061646472657373000000000000000000000000000000602082015250565b6000620004796031836200040a565b915062000486826200041b565b604082019050919050565b60006020820190508181036000830152620004ac816200046a565b9050919050565b620004be8162000393565b82525050565b6000602082019050620004db6000830184620004b3565b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620005196020836200040a565b91506200052682620004e1565b602082019050919050565b600060208201905081810360008301526200054c816200050a565b9050919050565b6119e080620005636000396000f3fe6080604052600436106100ec5760003560e01c806386ba25191161008a578063d1a2851d11610059578063d1a2851d146103d9578063da872ffa14610416578063ee567cd91461043f578063f2fde38b1461046a576100fb565b806386ba25191461031f5780638b2a4df5146103485780638da5cb5b14610371578063b347e7411461039c576100fb565b8063042b77cc116100c6578063042b77cc146102655780632dd04b7a146102a25780633288c682146102df578063715018a614610308576100fb565b8063010f25d7146101ea5780630192e6c81461021357806302c205f01461023c576100fb565b366100fb576100f9610493565b005b610104336104ad565b610143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013a9061122c565b60405180910390fd5b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290611298565b60405180910390fd5b6101e873cc6114b983e4ed2737e9bd3961c9924e6216c7046105a4565b005b3480156101f657600080fd5b50610211600480360381019061020c919061131b565b6105ca565b005b34801561021f57600080fd5b5061023a6004803603810190610235919061135b565b610669565b005b34801561024857600080fd5b50610263600480360381019061025e9190611467565b61074b565b005b34801561027157600080fd5b5061028c6004803603810190610287919061151d565b610843565b6040516102999190611559565b60405180910390f35b3480156102ae57600080fd5b506102c960048036038101906102c4919061135b565b610882565b6040516102d6919061158f565b60405180910390f35b3480156102eb57600080fd5b506103066004803603810190610301919061135b565b6108a2565b005b34801561031457600080fd5b5061031d610984565b005b34801561032b57600080fd5b506103466004803603810190610341919061135b565b610998565b005b34801561035457600080fd5b5061036f600480360381019061036a91906115aa565b610b04565b005b34801561037d57600080fd5b50610386610bf7565b6040516103939190611559565b60405180910390f35b3480156103a857600080fd5b506103c360048036038101906103be919061135b565b6104ad565b6040516103d0919061158f565b60405180910390f35b3480156103e557600080fd5b5061040060048036038101906103fb919061151d565b610c20565b60405161040d9190611559565b60405180910390f35b34801561042257600080fd5b5061043d6004803603810190610438919061135b565b610c68565b005b34801561044b57600080fd5b50610454610ef8565b6040516104619190611559565b60405180910390f35b34801561047657600080fd5b50610491600480360381019061048c919061135b565b610f10565b005b61049b610f93565b6104ab6104a6610f95565b6105a4565b565b6000806001905060005b60018054905081101561059a578180156105855750600181815481106104e0576104df6115fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663398cfb76856040518263ffffffff1660e01b81526004016105439190611559565b602060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190611658565b5b9150811561059a5780806001019150506104b7565b5080915050919050565b3660008037600080366000845af43d6000803e80600081146105c5573d6000f35b3d6000fd5b6105d2610fb1565b6105db8261102f565b61061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906116f7565b60405180910390fd5b61062382610c68565b61062c81610998565b7f7e895ef684dc2bc346da08dc2f907aee03d3f2fbaf9634e53d9c848081e354bc828260405161065d929190611717565b60405180910390a15050565b610671610fb1565b61067a8161102f565b6106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b0906116f7565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f18694eb16874b3190b87ff4555f9e0bf11824582bbff638dbf1cf695c9ead06d816040516107409190611559565b60405180910390a150565b610754336104ad565b610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a9061122c565b60405180910390fd5b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081290611298565b60405180910390fd5b61083873cc6114b983e4ed2737e9bd3961c9924e6216c7046105a4565b505050505050505050565b6001818154811061085357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b6108aa610fb1565b6108b38161102f565b6108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e9906116f7565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fc24ce0afc93b75393d529101473eace78db706e505db6dff99f36a6098b6527f816040516109799190611559565b60405180910390a150565b61098c610fb1565b61099660006110dd565b565b6109a0610fb1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a06906117b2565b60405180910390fd5b6001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f9cb35b4d87a29c981b43fe2b083241b12e94b901ee8278d73d81ce7dc3180ac781604051610af99190611559565b60405180910390a150565b610b0d336104ad565b610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b439061122c565b60405180910390fd5b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611298565b60405180910390fd5b610bf173cc6114b983e4ed2737e9bd3961c9924e6216c7046105a4565b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060018281548110610c3657610c356115fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610c70610fb1565b610c798161102f565b610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf906116f7565b60405180910390fd5b60005b8173ffffffffffffffffffffffffffffffffffffffff1660018281548110610ce657610ce56115fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d3f578080610d3790611801565b915050610cbb565b6002600060018381548110610d5757610d566115fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff02191690556001808080549050610dde9190611849565b81548110610def57610dee6115fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018281548110610e2e57610e2d6115fd565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001805480610e8857610e8761187d565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590557f6d2f0e1df68c030383a28d88dd5c68415e7a6546fbe379c429b28b5cc9339e0c82604051610eec9190611559565b60405180910390a15050565b73cc6114b983e4ed2737e9bd3961c9924e6216c70481565b610f18610fb1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7e9061191e565b60405180910390fd5b610f90816110dd565b50565b565b600073cc6114b983e4ed2737e9bd3961c9924e6216c704905090565b610fb96111a1565b73ffffffffffffffffffffffffffffffffffffffff16610fd7610bf7565b73ffffffffffffffffffffffffffffffffffffffff161461102d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110249061198a565b60405180910390fd5b565b6000806000905060005b6001805490508110156110d3578373ffffffffffffffffffffffffffffffffffffffff1660018281548110611071576110706115fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110c057600191506110d3565b80806110cb90611801565b915050611039565b5080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600082825260208201905092915050565b7f4e65786572612056657269666965723a2053656e646572206973206e6f74207660008201527f6572696669656400000000000000000000000000000000000000000000000000602082015250565b60006112166027836111a9565b9150611221826111ba565b604082019050919050565b6000602082019050818103600083015261124581611209565b9050919050565b7f496d706c656d656e746174696f6e2061646472657373206e6f74207365740000600082015250565b6000611282601e836111a9565b915061128d8261124c565b602082019050919050565b600060208201905081810360008301526112b181611275565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112e8826112bd565b9050919050565b6112f8816112dd565b811461130357600080fd5b50565b600081359050611315816112ef565b92915050565b60008060408385031215611332576113316112b8565b5b600061134085828601611306565b925050602061135185828601611306565b9150509250929050565b600060208284031215611371576113706112b8565b5b600061137f84828501611306565b91505092915050565b6000819050919050565b61139b81611388565b81146113a657600080fd5b50565b6000813590506113b881611392565b92915050565b600061ffff82169050919050565b6113d5816113be565b81146113e057600080fd5b50565b6000813590506113f2816113cc565b92915050565b600060ff82169050919050565b61140e816113f8565b811461141957600080fd5b50565b60008135905061142b81611405565b92915050565b6000819050919050565b61144481611431565b811461144f57600080fd5b50565b6000813590506114618161143b565b92915050565b600080600080600080600080610100898b031215611488576114876112b8565b5b60006114968b828c01611306565b98505060206114a78b828c016113a9565b97505060406114b88b828c01611306565b96505060606114c98b828c016113e3565b95505060806114da8b828c016113a9565b94505060a06114eb8b828c0161141c565b93505060c06114fc8b828c01611452565b92505060e061150d8b828c01611452565b9150509295985092959890939650565b600060208284031215611533576115326112b8565b5b6000611541848285016113a9565b91505092915050565b611553816112dd565b82525050565b600060208201905061156e600083018461154a565b92915050565b60008115159050919050565b61158981611574565b82525050565b60006020820190506115a46000830184611580565b92915050565b6000806000606084860312156115c3576115c26112b8565b5b60006115d186828701611306565b93505060206115e2868287016113a9565b92505060406115f386828701611306565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61163581611574565b811461164057600080fd5b50565b6000815190506116528161162c565b92915050565b60006020828403121561166e5761166d6112b8565b5b600061167c84828501611643565b91505092915050565b7f4e65786572612056657269666965723a205363656e6172696f2056657269666960008201527f6572204164647265737320646f65736e27742065786973740000000000000000602082015250565b60006116e16038836111a9565b91506116ec82611685565b604082019050919050565b60006020820190508181036000830152611710816116d4565b9050919050565b600060408201905061172c600083018561154a565b611739602083018461154a565b9392505050565b7f496e707574205363656e6172696f20616464726573732063616e6e6f7420626560008201527f20746865207a65726f2061646472657373000000000000000000000000000000602082015250565b600061179c6031836111a9565b91506117a782611740565b604082019050919050565b600060208201905081810360008301526117cb8161178f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180c82611388565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361183e5761183d6117d2565b5b600182019050919050565b600061185482611388565b915061185f83611388565b9250828203905081811115611877576118766117d2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119086026836111a9565b9150611913826118ac565b604082019050919050565b60006020820190508181036000830152611937816118fb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119746020836111a9565b915061197f8261193e565b602082019050919050565b600060208201905081810360008301526119a381611967565b905091905056fea26469706673582212204aa08495de98bbc3d3e4e327328bd12c48af1e54b51ae25da025c2daa3df1ac164736f6c63430008100033";

export class ProxyAavePoolIsEntryPoint__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    scenarioVerifierAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyAavePoolIsEntryPoint> {
    return super.deploy(
      scenarioVerifierAddress,
      overrides || {}
    ) as Promise<ProxyAavePoolIsEntryPoint>;
  }
  getDeployTransaction(
    scenarioVerifierAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(scenarioVerifierAddress, overrides || {});
  }
  attach(address: string): ProxyAavePoolIsEntryPoint {
    return super.attach(address) as ProxyAavePoolIsEntryPoint;
  }
  connect(signer: Signer): ProxyAavePoolIsEntryPoint__factory {
    return super.connect(signer) as ProxyAavePoolIsEntryPoint__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyAavePoolIsEntryPointInterface {
    return new utils.Interface(_abi) as ProxyAavePoolIsEntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyAavePoolIsEntryPoint {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProxyAavePoolIsEntryPoint;
  }
}
