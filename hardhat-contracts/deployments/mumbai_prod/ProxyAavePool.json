{
  "address": "0xc463F1E7c098b0D818A6c15117E454A116068849",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nexeraVerifierAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "aavePoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nexeraVerifierAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "supply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "referralCode",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "permitV",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "permitR",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "permitS",
          "type": "bytes32"
        }
      ],
      "name": "supplyWithPermit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb602fe225b04e9849cafcdc3a8c6e946f35328125121b79189401d22eceea4c8",
  "receipt": {
    "to": null,
    "from": "0x0BAd9DaD98143b2E946e8A40E4f27537be2f55E2",
    "contractAddress": "0xc463F1E7c098b0D818A6c15117E454A116068849",
    "transactionIndex": 2,
    "gasUsed": "554291",
    "logsBloom": "0x
    "blockHash": "0x06588c225bcaa18e59a8372b6d3dab1d75e925fe3a26a2327cee1f111fc2f4b8",
    "transactionHash": "0xb602fe225b04e9849cafcdc3a8c6e946f35328125121b79189401d22eceea4c8",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 44625802,
        "transactionHash": "0xb602fe225b04e9849cafcdc3a8c6e946f35328125121b79189401d22eceea4c8",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000000bad9dad98143b2e946e8a40e4f27537be2f55e2",
          "0x00000000000000000000000022b64229c41429a023549fdab3385893b579327a"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000009d89fa64a58030000000000000000000000000000000000000000000000012caf80b17ff78cde000000000000000000000000000000000000000000000047667e263ff79991bd0000000000000000000000000000000000000000000000012ca5a811d9ad34db0000000000000000000000000000000000000000000000476687fedf9de3e9c0",
        "logIndex": 10,
        "blockHash": "0x06588c225bcaa18e59a8372b6d3dab1d75e925fe3a26a2327cee1f111fc2f4b8"
      }
    ],
    "blockNumber": 44625802,
    "cumulativeGasUsed": "878016",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xC40702B192E37d710C60389dD130b3fB813A5bC1"],
  "numDeployments": 1,
  "solcInputHash": "01f3f48de4e4d02d39c4cf8b4c5f3a4c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nexeraVerifierAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"aavePoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nexeraVerifierAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor that sets the Nexera Verifier address.\",\"params\":{\"_nexeraVerifierAddress\":\"Address of the Nexera Verifier contract.\"}},\"supply(address,uint256,address)\":{\"details\":\"we add this in addition to the fallback in order to get it in the generated interface\",\"params\":{\"_amount\":\"Amount of the token to supply.\",\"_token\":\"Address of the token being supplied.\",\"_user\":\"Address of the user on whose behalf the supply is made.\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"details\":\"we add this in addition to the fallback in order to get it in the generated interface\",\"params\":{\"amount\":\"Amount of the asset.\",\"asset\":\"Address of the asset.\",\"deadline\":\"Deadline after which the permit is no longer valid.\",\"onBehalfOf\":\"Address of the user on whose behalf the supply is made.\",\"permitR\":\"R component of the permit signature.\",\"permitS\":\"S component of the permit signature.\",\"permitV\":\"V component of the permit signature.\",\"referralCode\":\"Referral code.\"}}},\"title\":\"ProxyAavePool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supply(address,uint256,address)\":{\"notice\":\"Delegates the supply function call to the Aave Pool.\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Delegates the supplyWithPermit function call to the Aave Pool.\"}},\"notice\":\"This example contract acts as a proxy for interacting with the Aave Pool, integrating with the Nexera entrypoint verifier for gating users.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxyExamples/ProxyAavePool.sol\":\"ProxyAavePool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overridden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\"},\"contracts/interfaces/INexeraVerifierEntrypoint.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\n/// @title INexeraVerifierEntrypoint\\n/// @notice Interface for the Nexera Verifier Entrypoint, defining essential functions for user verification and scenario verifier management.\\ninterface INexeraVerifierEntrypoint {\\n  /// @notice Checks if a user is allowed to access the entrypoint.\\n  /// @param user The address of the user to check.\\n  /// @return Boolean indicating whether the user is allowed.\\n  function isAllowedForEntrypoint(address user) external returns (bool);\\n\\n  /// @notice Adds a new scenario verifier to the system.\\n  /// @param scenarioVerifierAddress The address of the scenario verifier to be added.\\n  function addScenarioVerifier(address scenarioVerifierAddress) external;\\n\\n  /// @notice Deletes a scenario verifier from the system.\\n  /// @param scenarioVerifierAddress The address of the scenario verifier to be deleted.\\n  function deleteScenarioVerifier(address scenarioVerifierAddress) external;\\n\\n  /// @notice Updates a scenario verifier in the system.\\n  /// @param oldScenarioVerifierAddress The address of the current scenario verifier.\\n  /// @param newScenarioVerifierAddress The address of the new scenario verifier to replace the old one.\\n  function updateScenarioVerifier(\\n    address oldScenarioVerifierAddress,\\n    address newScenarioVerifierAddress\\n  ) external;\\n\\n  /// @notice Enables a scenario verifier for use in the system.\\n  /// @param scenarioVerifierAddress The address of the scenario verifier to be enabled.\\n  function enableScenario(address scenarioVerifierAddress) external;\\n\\n  /// @notice Disables a scenario verifier in the system.\\n  /// @param scenarioVerifierAddress The address of the scenario verifier to be disabled.\\n  function disableScenario(address scenarioVerifierAddress) external;\\n}\\n\",\"keccak256\":\"0xb57a1647be59a15dfb56079a386d2896cbaa353496fc0f147206fc31961a422b\",\"license\":\"GPL-3.0\"},\"contracts/proxyExamples/ProxyAavePool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport {Proxy} from \\\"@openzeppelin/contracts/proxy/Proxy.sol\\\";\\nimport \\\"../interfaces/INexeraVerifierEntrypoint.sol\\\";\\n\\n/// @title ProxyAavePool\\n/// @notice This example contract acts as a proxy for interacting with the Aave Pool,\\n/// integrating with the Nexera entrypoint verifier for gating users.\\ncontract ProxyAavePool is Proxy {\\n  // Address of the Aave Pool on the Mumbai network.\\n  address public constant aavePoolAddress =\\n    0xcC6114B983E4Ed2737E9BD3961c9924e6216c704;\\n\\n  // Address of the Nexera Verifier.\\n  address public nexeraVerifierAddress;\\n\\n  /// @dev Constructor that sets the Nexera Verifier address.\\n  /// @param _nexeraVerifierAddress Address of the Nexera Verifier contract.\\n  constructor(address _nexeraVerifierAddress) {\\n    nexeraVerifierAddress = _nexeraVerifierAddress;\\n  }\\n\\n  /// @dev Returns the address of the implementation contract (the aave pool being proxied).\\n  /// @return The address of the Aave Pool contract.\\n  function _implementation() internal pure override returns (address) {\\n    return aavePoolAddress;\\n  }\\n\\n  /// @notice Delegates the supply function call to the Aave Pool.\\n  /// @dev we add this in addition to the fallback in order to get it in the generated interface\\n  /// @param _token Address of the token being supplied.\\n  /// @param _amount Amount of the token to supply.\\n  /// @param _user Address of the user on whose behalf the supply is made.\\n  function supply(address _token, uint256 _amount, address _user) public {\\n    _delegateWithChecks();\\n  }\\n\\n  /// @notice Delegates the supplyWithPermit function call to the Aave Pool.\\n  /// @dev we add this in addition to the fallback in order to get it in the generated interface\\n  /// @param asset Address of the asset.\\n  /// @param amount Amount of the asset.\\n  /// @param onBehalfOf Address of the user on whose behalf the supply is made.\\n  /// @param referralCode Referral code.\\n  /// @param deadline Deadline after which the permit is no longer valid.\\n  /// @param permitV V component of the permit signature.\\n  /// @param permitR R component of the permit signature.\\n  /// @param permitS S component of the permit signature.\\n  function supplyWithPermit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode,\\n    uint256 deadline,\\n    uint8 permitV,\\n    bytes32 permitR,\\n    bytes32 permitS\\n  ) public {\\n    address _impl = aavePoolAddress;\\n    require(_impl != address(0), \\\"Implementation address not set\\\");\\n    require(\\n      INexeraVerifierEntrypoint(nexeraVerifierAddress).isAllowedForEntrypoint(\\n        msg.sender\\n      ),\\n      \\\"User is not whitelisted\\\"\\n    );\\n\\n    _delegateWithChecks();\\n  }\\n\\n  /// @dev Fallback function that delegates calls to the Aave Pool.\\n  fallback() external payable override {\\n    _delegateWithChecks();\\n  }\\n\\n  /// @dev Internal function to delegate calls to the Aave Pool after checking the implementation address and user whitelisting.\\n  function _delegateWithChecks() internal {\\n    address _impl = aavePoolAddress;\\n    require(_impl != address(0), \\\"Implementation address not set\\\");\\n    require(\\n      INexeraVerifierEntrypoint(nexeraVerifierAddress).isAllowedForEntrypoint(\\n        msg.sender\\n      ),\\n      \\\"User is not whitelisted\\\"\\n    );\\n    _delegate(aavePoolAddress);\\n  }\\n}\\n\",\"keccak256\":\"0xa5b10e3c83265cc39b0bf76907235a0be1d34234e4a313494ce9d240f654c710\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109b43803806109b4833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b61089d806101176000396000f3fe6080604052600436106100435760003560e01c806302c205f01461005c5780638b2a4df514610085578063a654897b146100ae578063ee567cd9146100d957610052565b3661005257610050610104565b005b61005a61011e565b005b34801561006857600080fd5b50610083600480360381019061007e91906105e6565b6102a1565b005b34801561009157600080fd5b506100ac60048036038101906100a7919061069c565b610417565b005b3480156100ba57600080fd5b506100c3610424565b6040516100d091906106fe565b60405180910390f35b3480156100e557600080fd5b506100ee610448565b6040516100fb91906106fe565b60405180910390f35b61010c610460565b61011c610117610462565b61047e565b565b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610776565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b81526004016101ff91906106fe565b6020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024291906107ce565b610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610847565b60405180910390fd5b61029e73cc6114b983e4ed2737e9bd3961c9924e6216c70461047e565b50565b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610776565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b815260040161038291906106fe565b6020604051808303816000875af11580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c591906107ce565b610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb90610847565b60405180910390fd5b61040c61011e565b505050505050505050565b61041f61011e565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73cc6114b983e4ed2737e9bd3961c9924e6216c70481565b565b600073cc6114b983e4ed2737e9bd3961c9924e6216c704905090565b3660008037600080366000845af43d6000803e806000811461049f573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d4826104a9565b9050919050565b6104e4816104c9565b81146104ef57600080fd5b50565b600081359050610501816104db565b92915050565b6000819050919050565b61051a81610507565b811461052557600080fd5b50565b60008135905061053781610511565b92915050565b600061ffff82169050919050565b6105548161053d565b811461055f57600080fd5b50565b6000813590506105718161054b565b92915050565b600060ff82169050919050565b61058d81610577565b811461059857600080fd5b50565b6000813590506105aa81610584565b92915050565b6000819050919050565b6105c3816105b0565b81146105ce57600080fd5b50565b6000813590506105e0816105ba565b92915050565b600080600080600080600080610100898b031215610607576106066104a4565b5b60006106158b828c016104f2565b98505060206106268b828c01610528565b97505060406106378b828c016104f2565b96505060606106488b828c01610562565b95505060806106598b828c01610528565b94505060a061066a8b828c0161059b565b93505060c061067b8b828c016105d1565b92505060e061068c8b828c016105d1565b9150509295985092959890939650565b6000806000606084860312156106b5576106b46104a4565b5b60006106c3868287016104f2565b93505060206106d486828701610528565b92505060406106e5868287016104f2565b9150509250925092565b6106f8816104c9565b82525050565b600060208201905061071360008301846106ef565b92915050565b600082825260208201905092915050565b7f496d706c656d656e746174696f6e2061646472657373206e6f74207365740000600082015250565b6000610760601e83610719565b915061076b8261072a565b602082019050919050565b6000602082019050818103600083015261078f81610753565b9050919050565b60008115159050919050565b6107ab81610796565b81146107b657600080fd5b50565b6000815190506107c8816107a2565b92915050565b6000602082840312156107e4576107e36104a4565b5b60006107f2848285016107b9565b91505092915050565b7f55736572206973206e6f742077686974656c6973746564000000000000000000600082015250565b6000610831601783610719565b915061083c826107fb565b602082019050919050565b6000602082019050818103600083015261086081610824565b905091905056fea2646970667358221220f51bd562d98032de7dcf150330f73959358112f329f63e13ab43f6eb0f5fadca64736f6c63430008100033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c806302c205f01461005c5780638b2a4df514610085578063a654897b146100ae578063ee567cd9146100d957610052565b3661005257610050610104565b005b61005a61011e565b005b34801561006857600080fd5b50610083600480360381019061007e91906105e6565b6102a1565b005b34801561009157600080fd5b506100ac60048036038101906100a7919061069c565b610417565b005b3480156100ba57600080fd5b506100c3610424565b6040516100d091906106fe565b60405180910390f35b3480156100e557600080fd5b506100ee610448565b6040516100fb91906106fe565b60405180910390f35b61010c610460565b61011c610117610462565b61047e565b565b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d90610776565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b81526004016101ff91906106fe565b6020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024291906107ce565b610281576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027890610847565b60405180910390fd5b61029e73cc6114b983e4ed2737e9bd3961c9924e6216c70461047e565b50565b600073cc6114b983e4ed2737e9bd3961c9924e6216c7049050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610776565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b347e741336040518263ffffffff1660e01b815260040161038291906106fe565b6020604051808303816000875af11580156103a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c591906107ce565b610404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fb90610847565b60405180910390fd5b61040c61011e565b505050505050505050565b61041f61011e565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b73cc6114b983e4ed2737e9bd3961c9924e6216c70481565b565b600073cc6114b983e4ed2737e9bd3961c9924e6216c704905090565b3660008037600080366000845af43d6000803e806000811461049f573d6000f35b3d6000fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d4826104a9565b9050919050565b6104e4816104c9565b81146104ef57600080fd5b50565b600081359050610501816104db565b92915050565b6000819050919050565b61051a81610507565b811461052557600080fd5b50565b60008135905061053781610511565b92915050565b600061ffff82169050919050565b6105548161053d565b811461055f57600080fd5b50565b6000813590506105718161054b565b92915050565b600060ff82169050919050565b61058d81610577565b811461059857600080fd5b50565b6000813590506105aa81610584565b92915050565b6000819050919050565b6105c3816105b0565b81146105ce57600080fd5b50565b6000813590506105e0816105ba565b92915050565b600080600080600080600080610100898b031215610607576106066104a4565b5b60006106158b828c016104f2565b98505060206106268b828c01610528565b97505060406106378b828c016104f2565b96505060606106488b828c01610562565b95505060806106598b828c01610528565b94505060a061066a8b828c0161059b565b93505060c061067b8b828c016105d1565b92505060e061068c8b828c016105d1565b9150509295985092959890939650565b6000806000606084860312156106b5576106b46104a4565b5b60006106c3868287016104f2565b93505060206106d486828701610528565b92505060406106e5868287016104f2565b9150509250925092565b6106f8816104c9565b82525050565b600060208201905061071360008301846106ef565b92915050565b600082825260208201905092915050565b7f496d706c656d656e746174696f6e2061646472657373206e6f74207365740000600082015250565b6000610760601e83610719565b915061076b8261072a565b602082019050919050565b6000602082019050818103600083015261078f81610753565b9050919050565b60008115159050919050565b6107ab81610796565b81146107b657600080fd5b50565b6000815190506107c8816107a2565b92915050565b6000602082840312156107e4576107e36104a4565b5b60006107f2848285016107b9565b91505092915050565b7f55736572206973206e6f742077686974656c6973746564000000000000000000600082015250565b6000610831601783610719565b915061083c826107fb565b602082019050919050565b6000602082019050818103600083015261086081610824565b905091905056fea2646970667358221220f51bd562d98032de7dcf150330f73959358112f329f63e13ab43f6eb0f5fadca64736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor that sets the Nexera Verifier address.",
        "params": {
          "_nexeraVerifierAddress": "Address of the Nexera Verifier contract."
        }
      },
      "supply(address,uint256,address)": {
        "details": "we add this in addition to the fallback in order to get it in the generated interface",
        "params": {
          "_amount": "Amount of the token to supply.",
          "_token": "Address of the token being supplied.",
          "_user": "Address of the user on whose behalf the supply is made."
        }
      },
      "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
        "details": "we add this in addition to the fallback in order to get it in the generated interface",
        "params": {
          "amount": "Amount of the asset.",
          "asset": "Address of the asset.",
          "deadline": "Deadline after which the permit is no longer valid.",
          "onBehalfOf": "Address of the user on whose behalf the supply is made.",
          "permitR": "R component of the permit signature.",
          "permitS": "S component of the permit signature.",
          "permitV": "V component of the permit signature.",
          "referralCode": "Referral code."
        }
      }
    },
    "title": "ProxyAavePool",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "supply(address,uint256,address)": {
        "notice": "Delegates the supply function call to the Aave Pool."
      },
      "supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)": {
        "notice": "Delegates the supplyWithPermit function call to the Aave Pool."
      }
    },
    "notice": "This example contract acts as a proxy for interacting with the Aave Pool, integrating with the Nexera entrypoint verifier for gating users.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7990,
        "contract": "contracts/proxyExamples/ProxyAavePool.sol:ProxyAavePool",
        "label": "nexeraVerifierAddress",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}
