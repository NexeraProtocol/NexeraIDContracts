
> on-chain-verification-test@1.0.0 test:unit /Users/antoineestienne/GithubRepositories/NexeraID/tests/on-chain-verification
> hardhat test --parallel

No need to generate any newer typings.

Simple Transfer gas used : 21000

  Simple Transfer
    ✔ Should get gas for simple tsf for reference (4364ms)

SimpleWhitelist contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
VerifierSigWrapper  deployed to: 0x2000DcF36a48FA7465A3093bc489686E77742FDf
SimpleWhitelist contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
CredentialAtomicQuerySigValidator  deployed to: 0x2Bb7c4E00a0d14Cca39aCb8587f40Be8d28fdb53
secp256k1 unavailable, reverting to browser version
SimpleWhitelist contract address: 0x2Bb7c4E00a0d14Cca39aCb8587f40Be8d28fdb53

  Custom Validators
    ✔ Should deploy custom validator (5737ms)

secp256k1 unavailable, reverting to browser version
secp256k1 unavailable, reverting to browser version
secp256k1 unavailable, reverting to browser version
secp256k1 unavailable, reverting to browser version
secp256k1 unavailable, reverting to browser version

  SimpleWhitelist: ID3
    - Should post zk proof for ID3


  ProxyAavePool: test deployed contracts (should be skipped in local testing)
    - Should check that user can call supply on un-proxied pool
    - Should check that user cannot call the ProxyAavePool if not whitelisted
    - Should be able to supply to the proxy pool after being whitelisted


  SimpleWhitelist: Set request
    ✔ Should Set request (4612ms)
    ✔ Should Set request for IDScan (5476ms)

secp256k1 unavailable, reverting to browser version
secp256k1 unavailable, reverting to browser version
secp256k1 unavailable, reverting to browser version
ScenarioVerifier contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
ScenarioVerifier contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
NexeraVerifierEntrypoint contract address: 0x2000DcF36a48FA7465A3093bc489686E77742FDf
ProxyAavePool contract address: 0x54AEdcEA637f72482C8e7d1AEB0a8Af5853263E4
VerifierSigWrapper  deployed to: 0x2000DcF36a48FA7465A3093bc489686E77742FDf
ScenarioVerifier contract address: 0xFfFdA23e215a3B0283633aB6aE92CA007f57AEB5
NexeraVerifierEntrypoint contract address: 0x1d2CA900e97A6C12642af55B77ab57549371D87e
ProxyAavePool contract address: 0x8c0bD720c8c85cdb8dcF86532060c7480F1A5E66
CredentialAtomicQuerySigValidator  deployed to: 0x2Bb7c4E00a0d14Cca39aCb8587f40Be8d28fdb53
SimpleWhitelist contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
ScenarioVerifier contract address: 0x08DEA7bdf3162a29BEa425B251F117259d780593
VerifierSigWrapper  deployed to: 0x2000DcF36a48FA7465A3093bc489686E77742FDf
NexeraVerifierEntrypoint contract address: 0x61E6dBe19C0C7a0835250e0aE82c7108cE596312
ProxyAavePool contract address: 0x7034f40937A4E4817B1fE66D265f047DF7665394
VerifierSigWrapper  deployed to: 0xD430340615822a72Ad2bABD530c52555ABc16C27
SimpleWhitelist contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
CredentialAtomicQuerySigValidator  deployed to: 0x2Bb7c4E00a0d14Cca39aCb8587f40Be8d28fdb53
secp256k1 unavailable, reverting to browser version
CredentialAtomicQuerySigValidator  deployed to: 0x9fc36bF470A7C099e83e200778809cA12Aa3Ee63
SimpleWhitelist contract address: 0x2000DcF36a48FA7465A3093bc489686E77742FDf
VerifierSigWrapper  deployed to: 0x2Bb7c4E00a0d14Cca39aCb8587f40Be8d28fdb53
CredentialAtomicQuerySigValidator  deployed to: 0x54AEdcEA637f72482C8e7d1AEB0a8Af5853263E4
SimpleWhitelist contract address: 0x0220dE68E41B0131bDf2C1796a142B9D11dd11FD
VerifierSigWrapper  deployed to: 0x9E6fDf5b83971C94B9B82658A00a4B14bC4736d1
secp256k1 unavailable, reverting to browser version
CredentialAtomicQuerySigValidator  deployed to: 0xFfFdA23e215a3B0283633aB6aE92CA007f57AEB5
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
NexeraVerifierEntrypoint contract address: 0xB30b3a3dF32136e4A5A4245CaC92FcEAa996EC63
ScenarioVerifier contract address: 0x2000DcF36a48FA7465A3093bc489686E77742FDf
NexeraVerifierEntrypoint contract address: 0x2Bb7c4E00a0d14Cca39aCb8587f40Be8d28fdb53
ScenarioVerifier contract address: 0x54AEdcEA637f72482C8e7d1AEB0a8Af5853263E4
ScenarioVerifier contract address: 0x0220dE68E41B0131bDf2C1796a142B9D11dd11FD
ScenarioVerifier contract address: 0x9E6fDf5b83971C94B9B82658A00a4B14bC4736d1
CircuitStorageInstance.init: 1.128s
CircuitStorageInstance.saveCircuitData: 0.095ms
{
  msg: 'Creating credential with schema https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json/KYCAgeCredential-v3.json',
  credentialSubject: {
    birthday: 19960404,
    documentType: 347261,
    id: 'did:polygonid:polygon:mumbai:2qDGzjEfsJ5YTJdVqy3BmUs9s9S2cKZcNFJCbpxrvX'
  }
}
VerifierSigWrapper  deployed to: 0xb2B72E04800b2121162439ab7Ecad810d8240C4E
CredentialAtomicQuerySigValidator  deployed to: 0x8c0bD720c8c85cdb8dcF86532060c7480F1A5E66
ScenarioVerifier contract address: 0x9E6fDf5b83971C94B9B82658A00a4B14bC4736d1
VerifierSigWrapper  deployed to: 0xFfFdA23e215a3B0283633aB6aE92CA007f57AEB5
SimpleWhitelist contract address: 0x0220dE68E41B0131bDf2C1796a142B9D11dd11FD
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
VerifierSigWrapper  deployed to: 0x9E6fDf5b83971C94B9B82658A00a4B14bC4736d1
CredentialAtomicQuerySigValidator  deployed to: 0x1d2CA900e97A6C12642af55B77ab57549371D87e
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
CredentialAtomicQuerySigValidator  deployed to: 0xFfFdA23e215a3B0283633aB6aE92CA007f57AEB5
CircuitStorageInstance.init: 1.197s
CircuitStorageInstance.saveCircuitData: 0.158ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmQQX5t9ZHqGMY5qKrxApMjejw4bugGVae3HddrcShZaGe',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qKNVL2R6GmHj4QEeQqKRoSQemU9ibKYZMDUT3tett',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    base64: '1',
    name: 'Antoine',
    documentType: '1'
  }
}
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
CircuitStorageInstance.init: 992.452ms
CircuitStorageInstance.saveCircuitData: 1.786ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmUej2eizQoJQXzo4fmoN6Eu3SMAbUjVXG1rE3GotRDfST',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qKrqvkFx7uqwuiLJ7iqPhygwbujxWBvtX7tuVd4zQ',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    base64: '1',
    name: 'Antoine',
    documentType: '1'
  }
}
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
CircuitStorageInstance.init: 5.619s
CircuitStorageInstance.saveCircuitData: 0.532ms
{
  msg: 'Creating credential with schema https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json/KYCAgeCredential-v3.json',
  credentialSubject: {
    birthday: 19960404,
    documentType: 347261,
    id: 'did:polygonid:polygon:mumbai:2qN92xug5b7r5np7oCS7ccgzHKT45QEik5WnoZ5VJb'
  }
}
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
CircuitStorageInstance.init: 5.434s
CircuitStorageInstance.saveCircuitData: 12.749ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qLQx53V9kcbSSVz7BsXRacLUcuTZeLP4TwA7jTgSz',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
VerifierSigWrapper  deployed to: 0x08DEA7bdf3162a29BEa425B251F117259d780593
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
createZKRequest - credentialSchemaLocation https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json-ld/kyc-v3.json-ld
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
CredentialAtomicQuerySigValidator  deployed to: 0x61E6dBe19C0C7a0835250e0aE82c7108cE596312
FPSllsker
CircuitStorageInstance.init: 10.792s
CircuitStorageInstance.saveCircuitData: 3.282ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qP2wRc5BJtASAheXSyGYgVVCU3BmR2x8CaJpALEt6',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
CircuitStorageInstance.init: 5.588s
CircuitStorageInstance.saveCircuitData: 10.663ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qLTc1fMFUFMsqwedQw3aE9o4Aw3uRd2cfuHjbSQeg',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmYoDQKUHSMEZk2ZwaXWvdHbYoLXShVWxRdsu1jsXxhN6F
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmRBfV9TboGRz42rT45mnMMK8VTtTc9r1mpLQjGfyXCgaf
CircuitStorageInstance.init: 4.707s
CircuitStorageInstance.saveCircuitData: 0.139ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qKuqVn7kC371UTw86JUfU83aCsdAy3vuPPGXF7FyP',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
createZKRequest - credentialSchemaLocation https://raw.githubusercontent.com/iden3/claim-schema-vocab/main/schemas/json-ld/kyc-v3.json-ld
loading circuits from file ./circuits_zk_verifier
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
CircuitStorageInstance.init: 3.943s
CircuitStorageInstance.saveCircuitData: 3.581ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qKCdPxdVKoGB279tKqtwdjgtDxJk1Ekkhh5aZtpyh',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
CircuitStorageInstance.init: 1.866s
CircuitStorageInstance.saveCircuitData: 2.553ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qK5KxiSnFoK5CVdT8CbVfaCMatQorb1AqKdhGPsWN',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qP2wRc5BJtASAheXSyGYgVVCU3BmR2x8CaJpALEt6',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qLTc1fMFUFMsqwedQw3aE9o4Aw3uRd2cfuHjbSQeg',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qKCdPxdVKoGB279tKqtwdjgtDxJk1Ekkhh5aZtpyh',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}

  SimpleWhitelist: KYCAgeCredential
    ✔ Should fail to post tempered zk proof for KYCAgeCredential (91063ms)

SimpleWhitelist contract address: 0x54AEdcEA637f72482C8e7d1AEB0a8Af5853263E4
VerifierSigWrapper  deployed to: 0x0220dE68E41B0131bDf2C1796a142B9D11dd11FD
CredentialAtomicQuerySigValidator  deployed to: 0x9E6fDf5b83971C94B9B82658A00a4B14bC4736d1
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qK5KxiSnFoK5CVdT8CbVfaCMatQorb1AqKdhGPsWN',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}
IDScanSelfie gas used : 452167, which is 21.531761904761904 times the cost of a simple tsf
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID

  SimpleWhitelist: IDScanSelfie
    ✔ Should post zk proof for IDScanSelfie (104751ms)

createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
CircuitStorageInstance.init: 1.571s
CircuitStorageInstance.saveCircuitData: 0.074ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qCyhZ9RgnccZEJ34y9CJEBmrw7j27tqxW3rtdCmyR',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
IDScanPassport gas used : 452167, which is 21.531761904761904 times the cost of a simple tsf
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet

getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
  SimpleWhitelist: IDScanPassport
    ✔ Should post zk proof for IDScanPassport (106777ms)

getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
(node:72992) Warning: Label 'check loading circuits from DB' already exists for console.time()
(Use `node --trace-warnings ...` to show where the warning was created)
CircuitStorageInstance.init: 2.559s
CircuitStorageInstance.saveCircuitData: 1.899ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qLbqVJX5iwYsNeyt6Fc8AJWQ25NsEBY4q7y1QpEZo',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks
KYCAgeCredential gas used : 452179, which is 21.532333333333334 times the cost of a simple tsf

  SimpleWhitelist: KYCAgeCredential
    ✔ Should post zk proof for KYCAgeCredential (117457ms)


  ScenarioVerifier: ProofOfResidence with NIN operator (on-chain-verification sdk)
    ✔ Should run whitelist flow for a NIN ZKP (125507ms)

createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qCyhZ9RgnccZEJ34y9CJEBmrw7j27tqxW3rtdCmyR',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
IDScan gas used : 452179, which is 21.532333333333334 times the cost of a simple tsf

  SimpleWhitelist: IDScan
    ✔ Should post zk proof for IDScan (144898ms)

createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks
ProofOfResidence gas used : 452167, which is 21.531761904761904 times the cost of a simple tsf
SimpleWhitelist contract address: 0xb2B72E04800b2121162439ab7Ecad810d8240C4E
VerifierSigWrapper  deployed to: 0x8c0bD720c8c85cdb8dcF86532060c7480F1A5E66
CredentialAtomicQuerySigValidator  deployed to: 0x6Febb483511702Ccf3a0f5a0b503C8C3D6Dd383A
getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
(node:72992) Warning: Label 'check loading circuits from DB' already exists for console.time()
CircuitStorageInstance.init: 767.486ms
CircuitStorageInstance.saveCircuitData: 0.196ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qKpe8PwDZncYksiN8UDMT9t6c8EXkWG94zVumJGoV',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'USA',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}

  ProxyAavePool
    ✔ Should check that user can call supply on un-proxied pool (923ms)
    ✔ Should check that user cannot call the ProxyAavePool if not whitelisted (167ms)
    ✔ Should be able to supply to the proxy pool after being whitelisted (186926ms)

IDScan gas used : 415014, which is 19.76257142857143 times the cost of a simple tsf
ScenarioVerifier contract address: 0xb6a7f363F7a391BCBf414d37937C6CED3dDA0cF7
VerifierSigWrapper  deployed to: 0x7034f40937A4E4817B1fE66D265f047DF7665394
CredentialAtomicQuerySigValidator  deployed to: 0xD430340615822a72Ad2bABD530c52555ABc16C27
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX

  SimpleWhitelist: ProofOfResidence
    ✔ Should post zk proof for ProofOfResidence (78215ms)
    ✔ Should fail posting zk proof for ProofOfResidence with field "USA" (17321ms)


  ScenarioVerifier: ProofOfResidence and IDScan using the on-chain-verification sdk
    ✔ Should post zk proofs using whitelistScenario (one call), using the on-chain-verifcation-sdk (191644ms)

getOrCreatePolygonIdIdentity - init data-storage
getOrCreatePolygonIdIdentity - done data-storage
getOrCreatePolygonIdIdentity - init cred wallet
getOrCreatePolygonIdIdentity - done cred wallet
getOrCreatePolygonIdIdentity - init identity wallet
getOrCreatePolygonIdIdentity - done identity wallet
getOrCreatePolygonIdIdentity - getOrCreateDID
getOrCreatePolygonIdIdentity - done getOrCreateDID
loading circuits from file ./circuits_zk_verifier
(node:72994) Warning: Label 'check loading circuits from DB' already exists for console.time()
(Use `node --trace-warnings ...` to show where the warning was created)
CircuitStorageInstance.init: 405.971ms
CircuitStorageInstance.saveCircuitData: 0.076ms
{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmRWxkbToWBkNmR34WEXsKypsWMEgWD5nsYZn2FESdZm4A',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qEshabZr8SXZvBQD2eaZNQvSMpJ6noPLMkFy4ExAE',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    country: 'GBR',
    base64: 'iVBORw0KGgoAAAANSUhEUgAAA',
    name: 'proofOfResidence.jpg',
    documentType: 'image/jpeg'
  }
}
NexeraVerifierEntrypoint contract address: 0x4ea9BDc56F69C7FD812DD034829471d79F5dA872
ScenarioVerifier contract address: 0x7c485d5c348329E5dEA279Fa41Ac894C36c70499
NexeraVerifierEntrypoint contract address: 0x0eb3d460315Ee49fd4bbea57b728Df14AcfBB3CD
ScenarioVerifier contract address: 0x97AD39b21bA8D68564c2E01413241Aa9Cc9D831D
ScenarioVerifier contract address: 0xfc4Dbb8F9B20674dfaC0d5a01A6dD69f07fEC1E0
NexeraVerifierEntrypoint contract address: 0xaC91e330fE6a77944468490B0B27B829418f6DD1
ScenarioVerifier contract address: 0x7D8939D28A68F75e0480339d6e3A1aCFEeEdB110
ScenarioVerifier contract address: 0xD7609E266bE7292D7FBc9766Ede5080288949F78
ScenarioVerifier contract address: 0x6F07cE622f2664248ebD72bb6b5af03Bc99dE52F
NexeraVerifierEntrypoint contract address: 0x06B4d428CD080C2EEa7B0BD70DF498fb663B8BB0
ScenarioVerifier contract address: 0x57638A36b49AC06e576bA5EA818e37CDDE05C60B
ScenarioVerifier contract address: 0xD0c0CD1c28851e5f292f32F537a887391e3e5Db2
NexeraVerifierEntrypoint contract address: 0xdFDEE2E480bafa5e3f0Fd3f9004eE33c87f109EA
ScenarioVerifier contract address: 0x4acb473D5d82A4C078A0100580d7662ee8972063
ScenarioVerifier contract address: 0x1F3D20e4fC186cD2F59479C90C428be60d546182

  NexeraVerifierEntrypoint: test two scenarios
    ✔ Should prevent non-owner from adding a scenario (98ms)
    ✔ Should add two scenarios to nexeraVerifierEntrypoint, whitelist them and check that entrypoint is whitelisted (190219ms)
    ✔ Should allow owner to add a scenario and check if is enabled
    ✔ Should allow owner to delete a scenario and check if isn't on enabled status (68ms)
    ✔ Should allow owner to add an scenario and update with other address (60ms)
    ✔ Should allow owner to disable a Scenario (42ms)
    ✔ Should allow owner to disable and enable again a Scenario (47ms)

{
  msg: 'Creating credential with schema https://nexera.infura-ipfs.io/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY',
  credentialSubject: {
    id: 'did:polygonid:polygon:mumbai:2qEshabZr8SXZvBQD2eaZNQvSMpJ6noPLMkFy4ExAE',
    journeyId: 'b7501c16-dc98-4d46-8ace-9e86fd201d2b',
    highLevelResult: 'Passed',
    firstName: 'John',
    middleName: 'Middle',
    lastName: 'Doe',
    gender: 'Male',
    age: 25,
    citizenship: 'USA',
    documentCategory: 'Driving License',
    documentName: 'John Doe',
    documentSide: 'Front',
    documentType: 'Driving License',
    entryDate: '2023-06-29',
    entryTime: '123123',
    fullName: 'John Doe',
    addressLine1: '123 Main St',
    addressLine2: 'Apt 1',
    birthDate: '2023-06-29',
    birthPlace: 'New York, NY',
    highLevelResultDetails: {
      documentOverallValidation: 'PASSED',
      documentBlockingPolicy: 'PASSED',
      documentExpiry: 'PASSED',
      documentSupport: 'PASSED',
      documentValidation: 'PASSED',
      faceMatchValidation: 'PASSED',
      accumulativeLivenessResult: 'PASSED'
    },
    faceMatchScore: 'qwe',
    qualityCheckDetails: [ { id: '1234', title: '1234', description: '1234', state: 1 } ],
    validationDetails: [ { name: '1234', description: '1234', result: 2 } ]
  }
}

  NexeraVerifierEntrypoint : with OCV SDK
    ✔ Should add two scenarios to nexeraVerifierEntrypoint, whitelist them and check that entrypoint is whitelisted (194848ms)
    ✔ Should allow to add a scenario and check if is enabled with OCV
    ✔ Should allow to delete a scenario and check if isn't on enabled status with OCV
    ✔ Should allow to disable a Scenario with OCV
    ✔ Should allow to disable and enable again a Scenario

createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmSgzzZwZ8Ws6j7gYeE7Rn3k14K3Ak6qWXQonpjfLAwVAX
createZKRequest - credentialSchemaLocation https://nexera.infura-ipfs.io/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks

  ScenarioVerifier: ProofOfResidence and IDScan
    ✔ Should set requests for ProofOfResidence and IDScan (6640ms)
    ✔ Should post zk proof for ProofOfResidence and IDScan (182732ms)
    ✔ Should post zk proof for ProofOfResidence and IDScan using whitelistScenario (one call) (27715ms)


  31 passing (4m)
  4 pending

Note: Gas reporting has been skipped because plugin `hardhat-gas-reporter` does not support the --parallel flag.
